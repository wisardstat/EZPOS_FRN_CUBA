"use strict";
(self["webpackChunkcuba"] = self["webpackChunkcuba"] || []).push([["default-node_modules_ng-gallery_fesm2020_ng-gallery-lightbox_mjs"],{

/***/ 23050:
/*!******************************************************************!*\
  !*** ./node_modules/ng-gallery/fesm2020/ng-gallery-lightbox.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GallerizeDirective: () => (/* binding */ GallerizeDirective),
/* harmony export */   LIGHTBOX_CONFIG: () => (/* binding */ LIGHTBOX_CONFIG),
/* harmony export */   Lightbox: () => (/* binding */ Lightbox),
/* harmony export */   LightboxComponent: () => (/* binding */ LightboxComponent),
/* harmony export */   LightboxDirective: () => (/* binding */ LightboxDirective),
/* harmony export */   LightboxModule: () => (/* binding */ LightboxModule)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 61699);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 26575);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/animations */ 12501);
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/a11y */ 41240);
/* harmony import */ var ng_gallery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ng-gallery */ 60977);
/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/portal */ 20236);
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/keycodes */ 56407);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 72513);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ 56231);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 16290);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 31523);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ 59016);
/* harmony import */ var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/overlay */ 76065);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/platform-browser */ 36480);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs/operators */ 50655);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 81891);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs/operators */ 79736);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs/operators */ 13738);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ 17474);















const _c0 = function (a0, a1) {
  return {
    startAnimationTime: a0,
    exitAnimationTime: a1
  };
};
const _c1 = function (a0, a1) {
  return {
    value: a0,
    params: a1
  };
};
const LIGHTBOX_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('LIGHTBOX_CONFIG');
const lightboxAnimation = (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.trigger)('lightbox', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.state)('void, exit', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
  opacity: 0,
  transform: 'scale(0.7)'
})), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.state)('enter', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
  transform: 'none'
})), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.transition)('* => enter', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.animate)('{{startAnimationTime}}ms cubic-bezier(0, 0, 0.2, 1)', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
  transform: 'none',
  opacity: 1
}))), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.transition)('* => void, * => exit', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.animate)('{{exitAnimationTime}}ms cubic-bezier(0.4, 0.0, 0.2, 1)', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_1__.style)({
  opacity: 0
})))]);
class LightboxComponent {
  constructor(_document, _focusTrapFactory, _elementRef) {
    this._document = _document;
    this._focusTrapFactory = _focusTrapFactory;
    this._elementRef = _elementRef;
    /** State of the lightbox animation. */
    this.state = 'enter';
    this._savePreviouslyFocusedElement();
  }
  /** Callback, invoked whenever an animation on the host completes. */
  onAnimationDone(event) {
    if (event.toState === 'enter') {
      this._trapFocus();
    } else {
      this.overlayRef.dispose();
      this._restoreFocus();
    }
  }
  /** Moves the focus inside the focus trap. */
  _trapFocus() {
    if (!this._focusTrap) {
      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);
    }
    // If were to attempt to focus immediately, then the content of the lightbox would not yet be
    // ready in instances where change detection has to run first. To deal with this, we simply
    // wait for the microtask queue to be empty.
    this._focusTrap.focusInitialElementWhenReady();
  }
  /** Saves a reference to the element that was focused before the lightbox was opened. */
  _savePreviouslyFocusedElement() {
    if (this._document) {
      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement;
      // Note that there is no focus method when rendering on the server.
      if (this._elementRef.nativeElement.focus) {
        // Move focus onto the lightbox immediately in order to prevent the user from accidentally
        // opening multiple dialogs at the same time. Needs to be async, because the element
        // may not be focusable immediately.
        Promise.resolve().then(() => this._elementRef.nativeElement.focus());
      }
    }
  }
  /** Restores focus to the element that was focused before the lightbox opened. */
  _restoreFocus() {
    const toFocus = this._elementFocusedBeforeDialogWasOpened;
    // We need the extra check, because IE can set the `activeElement` to null in some cases.
    if (toFocus && typeof toFocus.focus === 'function') {
      toFocus.focus();
    }
    if (this._focusTrap) {
      this._focusTrap.destroy();
    }
  }
}
LightboxComponent.ɵfac = function LightboxComponent_Factory(t) {
  return new (t || LightboxComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_2__.DOCUMENT, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__.ConfigurableFocusTrapFactory), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
};
LightboxComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: LightboxComponent,
  selectors: [["lightbox"]],
  hostAttrs: ["tabindex", "-1", "aria-modal", "true"],
  hostVars: 12,
  hostBindings: function LightboxComponent_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsyntheticHostListener"]("@lightbox.done", function LightboxComponent_animation_lightbox_done_HostBindingHandler($event) {
        return ctx.onAnimationDone($event);
      });
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("id", "lightbox-" + ctx.id)("role", ctx.role)("aria-labelledby", ctx.ariaLabel ? null : ctx.ariaLabelledBy)("aria-label", ctx.ariaLabel)("aria-describedby", ctx.ariaDescribedBy || null);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsyntheticHostProperty"]("@lightbox", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction2"](9, _c1, ctx.state, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction2"](6, _c0, ctx.startAnimationTime, ctx.exitAnimationTime)));
    }
  },
  decls: 2,
  vars: 4,
  consts: [[3, "id", "destroyRef", "skipInitConfig"], ["aria-label", "Close", 1, "g-btn-close", 3, "innerHTML", "click"]],
  template: function LightboxComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "gallery", 0)(1, "i", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function LightboxComponent_Template_i_click_1_listener() {
        return ctx.overlayRef.detach();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.id)("destroyRef", false)("skipInitConfig", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHTML", ctx.closeIcon, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);
    }
  },
  dependencies: [ng_gallery__WEBPACK_IMPORTED_MODULE_4__.GalleryComponent],
  styles: ["lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}  lightbox:focus{outline:none}  lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}  .g-backdrop{background-color:#00000052}  .fullscreen{width:100%}  .fullscreen   lightbox{max-width:none;max-width:initial;max-height:none;max-height:initial;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}  .g-overlay{margin:auto}@media only screen and (max-width: 480px){  .g-overlay{width:100%}  .g-overlay   lightbox{max-width:none;max-width:initial;max-height:none;max-height:initial;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}  .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){  .g-btn-close{right:.7em;top:.7em}}"],
  data: {
    animation: [lightboxAnimation]
  },
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LightboxComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'lightbox',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      animations: [lightboxAnimation],
      template: `
    <gallery [id]="id" [destroyRef]="false" [skipInitConfig]="true">
      <i class="g-btn-close" aria-label="Close" [innerHTML]="closeIcon" (click)="overlayRef.detach()"></i>
    </gallery>
  `,
      host: {
        'tabindex': '-1',
        'aria-modal': 'true',
        '[attr.id]': '"lightbox-" + id',
        '[attr.role]': 'role',
        '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',
        '[attr.aria-label]': 'ariaLabel',
        '[attr.aria-describedby]': 'ariaDescribedBy || null',
        '[@lightbox]': '{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }',
        '(@lightbox.done)': 'onAnimationDone($event)'
      },
      styles: ["::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:none;max-width:initial;max-height:none;max-height:initial;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:none;max-width:initial;max-height:none;max-height:initial;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}\n"]
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.DOCUMENT]
      }]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__.ConfigurableFocusTrapFactory
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }];
  }, null);
})();
const defaultConfig = {
  backdropClass: 'g-backdrop',
  panelClass: 'g-overlay',
  hasBackdrop: true,
  keyboardShortcuts: true,
  role: 'lightbox',
  startAnimationTime: 150,
  exitAnimationTime: 75,
  closeIcon: `<?xml version="1.0" encoding="UTF-8"?>
<svg width="512px" height="512px" enable-background="new 0 0 47.971 47.971" version="1.1" viewBox="0 0 47.971 47.971" xml:space="preserve" xmlns="http://www.w3.org/2000/svg">
	<path d="M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z" fill="#fff"/>
</svg>
`
};
class Lightbox {
  constructor(config, _gallery, _overlay, _sanitizer) {
    this._gallery = _gallery;
    this._overlay = _overlay;
    this._sanitizer = _sanitizer;
    /** Stream that emits when lightbox is opened */
    this.opened = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subject();
    /** Stream that emits when lightbox is closed */
    this.closed = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subject();
    this._config = config ? {
      ...defaultConfig,
      ...config
    } : defaultConfig;
  }
  /**
   * Set Lightbox Config
   * @param config - LightboxConfig
   */
  setConfig(config) {
    this._config = {
      ...this._config,
      ...config
    };
  }
  /**
   * Open Lightbox Overlay
   * @param i - Current Index
   * @param id - Gallery ID
   * @param config - Lightbox Config
   */
  open(i = 0, id = 'lightbox', config) {
    const _config = config ? {
      ...this._config,
      ...config
    } : this._config;
    const overlayConfig = {
      backdropClass: _config.backdropClass,
      panelClass: _config.panelClass,
      hasBackdrop: _config.hasBackdrop,
      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),
      scrollStrategy: this._overlay.scrollStrategies.block(),
      disposeOnNavigation: true
    };
    const galleryRef = this._gallery.ref(id);
    galleryRef.setConfig({
      reserveGesturesAction: true
    });
    galleryRef.set(i);
    this._overlayRef = this._overlay.create(overlayConfig);
    // overlay opened event
    this._overlayRef.attachments().subscribe(() => this.opened.next(id));
    // overlay closed event
    this._overlayRef.detachments().subscribe(() => this.closed.next(id));
    // Attach gallery to the overlay
    const galleryPortal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_6__.ComponentPortal(LightboxComponent);
    const lightboxRef = this._overlayRef.attach(galleryPortal);
    lightboxRef.instance.id = id;
    lightboxRef.instance.overlayRef = this._overlayRef;
    lightboxRef.instance.closeIcon = this._sanitizer.bypassSecurityTrustHtml(this._config.closeIcon);
    lightboxRef.instance.role = this._config.role;
    lightboxRef.instance.ariaLabel = this._config.ariaLabel;
    lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;
    lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;
    lightboxRef.instance.startAnimationTime = this._config.startAnimationTime;
    lightboxRef.instance.exitAnimationTime = this._config.exitAnimationTime;
    if (_config.hasBackdrop) {
      this._overlayRef.backdropClick().subscribe(() => this.close());
    }
    // Add keyboard shortcuts
    if (_config.keyboardShortcuts) {
      this._overlayRef.keydownEvents().subscribe(event => {
        switch (event.keyCode) {
          case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_7__.LEFT_ARROW:
            galleryRef.prev();
            break;
          case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_7__.RIGHT_ARROW:
            galleryRef.next();
            break;
          case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_7__.ESCAPE:
            this.close();
        }
      });
    }
  }
  /**
   * Close Lightbox Overlay
   */
  close() {
    if (this._overlayRef.hasAttached()) {
      this._overlayRef.detach();
    }
  }
}
Lightbox.ɵfac = function Lightbox_Factory(t) {
  return new (t || Lightbox)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](LIGHTBOX_CONFIG, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](ng_gallery__WEBPACK_IMPORTED_MODULE_4__.Gallery), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_8__.Overlay), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__.DomSanitizer));
};
Lightbox.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: Lightbox,
  factory: Lightbox.ɵfac
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Lightbox, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [LIGHTBOX_CONFIG]
      }]
    }, {
      type: ng_gallery__WEBPACK_IMPORTED_MODULE_4__.Gallery
    }, {
      type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_8__.Overlay
    }, {
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__.DomSanitizer
    }];
  }, null);
})();
class GallerizeDirective {
  constructor(_zone, _el, _gallery, _lightbox, _renderer, platform, _document, _galleryCmp) {
    this._zone = _zone;
    this._el = _el;
    this._gallery = _gallery;
    this._lightbox = _lightbox;
    this._renderer = _renderer;
    this._document = _document;
    this._galleryCmp = _galleryCmp;
    /** Default gallery id */
    this._galleryId = 'lightbox';
    /** The selector used to query images elements */
    this.selector = 'img';
    // Set gallerize mode
    if ((0,_angular_common__WEBPACK_IMPORTED_MODULE_2__.isPlatformBrowser)(platform)) {
      this._mode = _galleryCmp ? "gallery" /* GallerizeMode.Gallery */ : "detector" /* GallerizeMode.Detector */;
    }
  }

  ngOnInit() {
    this._zone.runOutsideAngular(() => {
      this._galleryId = this.gallerize || this._galleryId;
      const ref = this._gallery.ref(this._galleryId);
      switch (this._mode) {
        case "detector" /* GallerizeMode.Detector */:
          this.detectorMode(ref);
          break;
        case "gallery" /* GallerizeMode.Gallery */:
          this.galleryMode(ref);
      }
    });
  }
  ngOnDestroy() {
    switch (this._mode) {
      case "detector" /* GallerizeMode.Detector */:
        this._detector$.complete();
        this._observer$.disconnect();
        break;
      case "gallery" /* GallerizeMode.Gallery */:
        this._itemClick$.unsubscribe();
        this._itemChange$.unsubscribe();
    }
  }
  /** Gallery mode: means `gallerize` directive is used on `<gallery>` component
   * Adds a click event to each gallery item so it opens in lightbox */
  galleryMode(galleryRef) {
    // Clone its items to the new gallery instance
    this._itemClick$ = this._galleryCmp.galleryRef.itemClick.subscribe(i => this._lightbox.open(i, this._galleryId));
    this._itemChange$ = this._galleryCmp.galleryRef.itemsChanged.subscribe(state => galleryRef.load(state.items));
  }
  /** Detector mode: means `gallerize` directive is used on a normal HTMLElement
   *  Detects images and adds a click event to each image so it opens in the lightbox */
  detectorMode(galleryRef) {
    this._detector$ = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subject();
    // Query image elements
    this._detector$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.debounceTime)(300), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.switchMap)(() => {
      /** get all img elements from content */
      const imageElements = this._el.nativeElement.querySelectorAll(this.selector);
      if (imageElements && imageElements.length) {
        const images = [];
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.from)(imageElements).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.map)((el, i) => {
          // Add click event to the image
          this._renderer.setStyle(el, 'cursor', 'pointer');
          this._renderer.setProperty(el, 'onclick', () => this._zone.run(() => this._lightbox.open(i, this._galleryId)));
          if (el instanceof HTMLImageElement) {
            // If element is type of img use the src property
            return {
              src: el.getAttribute('imageSrc') || el.src,
              thumb: el.getAttribute('thumbSrc') || el.src
            };
          } else {
            // Otherwise, use element background-image url
            const elStyle = el.currentStyle || this._document.defaultView.getComputedStyle(el, null);
            const background = elStyle.backgroundImage.slice(4, -1).replace(/"/g, '');
            return {
              src: el.getAttribute('imageSrc') || background,
              thumb: el.getAttribute('thumbSrc') || background
            };
          }
        }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.tap)(data => images.push(new ng_gallery__WEBPACK_IMPORTED_MODULE_4__.ImageItem(data))), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.finalize)(() => galleryRef.load(images)));
      } else {
        return rxjs__WEBPACK_IMPORTED_MODULE_16__.EMPTY;
      }
    })).subscribe();
    // Observe content changes
    this._observer$ = new MutationObserver(() => this._detector$.next());
    this._observer$.observe(this._el.nativeElement, {
      childList: true,
      subtree: true
    });
  }
}
GallerizeDirective.ɵfac = function GallerizeDirective_Factory(t) {
  return new (t || GallerizeDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ng_gallery__WEBPACK_IMPORTED_MODULE_4__.Gallery), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](Lightbox), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_2__.DOCUMENT), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ng_gallery__WEBPACK_IMPORTED_MODULE_4__.GalleryComponent, 11));
};
GallerizeDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: GallerizeDirective,
  selectors: [["", "gallerize", ""]],
  inputs: {
    gallerize: "gallerize",
    selector: "selector"
  }
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GallerizeDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[gallerize]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: ng_gallery__WEBPACK_IMPORTED_MODULE_4__.Gallery
    }, {
      type: Lightbox
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }, {
      type: Object,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.DOCUMENT]
      }]
    }, {
      type: ng_gallery__WEBPACK_IMPORTED_MODULE_4__.GalleryComponent,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Host
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Self
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }]
    }];
  }, {
    gallerize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    selector: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }]
  });
})();
class LightboxDirective {
  constructor(_lightbox, _el, _renderer) {
    this._lightbox = _lightbox;
    this._el = _el;
    this._renderer = _renderer;
    this.clickEvent = rxjs__WEBPACK_IMPORTED_MODULE_17__.Subscription.EMPTY;
    this.index = 0;
    this.id = 'root';
  }
  ngOnInit() {
    this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');
    this.clickEvent = (0,rxjs__WEBPACK_IMPORTED_MODULE_18__.fromEvent)(this._el.nativeElement, 'click').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.tap)(() => this._lightbox.open(this.index, this.id))).subscribe();
  }
  ngOnDestroy() {
    this.clickEvent.unsubscribe();
  }
}
LightboxDirective.ɵfac = function LightboxDirective_Factory(t) {
  return new (t || LightboxDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](Lightbox), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2));
};
LightboxDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: LightboxDirective,
  selectors: [["", "lightbox", ""]],
  inputs: {
    index: ["lightbox", "index"],
    id: ["gallery", "id"]
  }
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LightboxDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[lightbox]'
    }]
  }], function () {
    return [{
      type: Lightbox
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }];
  }, {
    index: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['lightbox']
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['gallery']
    }]
  });
})();
class LightboxModule {
  static withConfig(config) {
    return {
      ngModule: LightboxModule,
      providers: [{
        provide: LIGHTBOX_CONFIG,
        useValue: config
      }]
    };
  }
}
LightboxModule.ɵfac = function LightboxModule_Factory(t) {
  return new (t || LightboxModule)();
};
LightboxModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: LightboxModule
});
LightboxModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  providers: [Lightbox],
  imports: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_8__.OverlayModule, ng_gallery__WEBPACK_IMPORTED_MODULE_4__.GalleryModule, _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__.A11yModule]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LightboxModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_8__.OverlayModule, ng_gallery__WEBPACK_IMPORTED_MODULE_4__.GalleryModule, _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__.A11yModule],
      declarations: [LightboxComponent, LightboxDirective, GallerizeDirective],
      exports: [LightboxDirective, GallerizeDirective],
      providers: [Lightbox]
    }]
  }], null, null);
})();

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 60977:
/*!*********************************************************!*\
  !*** ./node_modules/ng-gallery/fesm2020/ng-gallery.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CounterPosition: () => (/* binding */ CounterPosition),
/* harmony export */   DotsPosition: () => (/* binding */ DotsPosition),
/* harmony export */   GALLERY_CONFIG: () => (/* binding */ GALLERY_CONFIG),
/* harmony export */   Gallery: () => (/* binding */ Gallery),
/* harmony export */   GalleryAction: () => (/* binding */ GalleryAction),
/* harmony export */   GalleryComponent: () => (/* binding */ GalleryComponent),
/* harmony export */   GalleryIframeComponent: () => (/* binding */ GalleryIframeComponent),
/* harmony export */   GalleryImageComponent: () => (/* binding */ GalleryImageComponent),
/* harmony export */   GalleryItemType: () => (/* binding */ GalleryItemType),
/* harmony export */   GalleryModule: () => (/* binding */ GalleryModule),
/* harmony export */   GalleryRef: () => (/* binding */ GalleryRef),
/* harmony export */   GalleryVideoComponent: () => (/* binding */ GalleryVideoComponent),
/* harmony export */   IframeItem: () => (/* binding */ IframeItem),
/* harmony export */   ImageItem: () => (/* binding */ ImageItem),
/* harmony export */   ImageLoaderMode: () => (/* binding */ ImageLoaderMode),
/* harmony export */   ImageSize: () => (/* binding */ ImageSize),
/* harmony export */   LazyImage: () => (/* binding */ LazyImage),
/* harmony export */   LoadingStrategy: () => (/* binding */ LoadingStrategy),
/* harmony export */   SlidingDirection: () => (/* binding */ SlidingDirection),
/* harmony export */   TapClick: () => (/* binding */ TapClick),
/* harmony export */   ThumbnailsMode: () => (/* binding */ ThumbnailsMode),
/* harmony export */   ThumbnailsPosition: () => (/* binding */ ThumbnailsPosition),
/* harmony export */   ThumbnailsView: () => (/* binding */ ThumbnailsView),
/* harmony export */   VideoItem: () => (/* binding */ VideoItem),
/* harmony export */   YoutubeItem: () => (/* binding */ YoutubeItem)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 61699);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 72513);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 58071);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 84980);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 16290);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ 31523);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ 59016);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ 7756);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ 74520);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 81891);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 77592);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 13738);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ 79736);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs/operators */ 50655);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common */ 26575);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/platform-browser */ 36480);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/animations */ 12501);








function GalleryNavComponent_i_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "i", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("tapClick", function GalleryNavComponent_i_0_Template_i_tapClick_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);
      const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r2.action.emit("prev"));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHtml", ctx_r0.navIcon, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);
  }
}
function GalleryNavComponent_i_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "i", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("tapClick", function GalleryNavComponent_i_1_Template_i_tapClick_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);
      const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r4.action.emit("next"));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHtml", ctx_r1.navIcon, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);
  }
}
function GalleryDotsComponent_div_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("tapClick", function GalleryDotsComponent_div_0_Template_div_tapClick_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r4);
      const i_r2 = restoredCtx.index;
      const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r3.action.emit(i_r2));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const i_r2 = ctx.index;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx_r0.config == null ? null : ctx_r0.config.dotsSize, "px")("height", ctx_r0.config == null ? null : ctx_r0.config.dotsSize, "px");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("g-dot-active", i_r2 === ctx_r0.state.currIndex);
  }
}
function GalleryImageComponent_img_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "img", 4);
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("@fadeIn", undefined)("src", ctx_r0.imageUrl, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("alt", ctx_r0.alt);
  }
}
function GalleryImageComponent_div_3_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 8);
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHTML", ctx_r3.errorTemplate, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);
  }
}
function GalleryImageComponent_div_3_ng_template_2_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "\u26A0");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
}
function GalleryImageComponent_div_3_ng_template_2_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h2");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "\u26A0");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Unable to load the image!");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
}
function GalleryImageComponent_div_3_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, GalleryImageComponent_div_3_ng_template_2_ng_container_0_Template, 3, 0, "ng-container", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, GalleryImageComponent_div_3_ng_template_2_ng_template_1_Template, 4, 0, "ng-template", null, 10, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
  }
  if (rf & 2) {
    const _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5.isThumbnail)("ngIfElse", _r7);
  }
}
function GalleryImageComponent_div_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, GalleryImageComponent_div_3_div_1_Template, 1, 1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, GalleryImageComponent_div_3_ng_template_2_Template, 3, 2, "ng-template", null, 7, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.errorTemplate)("ngIfElse", _r4);
  }
}
function GalleryImageComponent_ng_container_4_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 13);
  }
  if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHTML", ctx_r9.loaderTemplate, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);
  }
}
function GalleryImageComponent_ng_container_4_ng_template_2_div_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 15);
  }
}
function GalleryImageComponent_ng_container_4_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, GalleryImageComponent_ng_container_4_ng_template_2_div_0_Template, 1, 0, "div", 14);
  }
  if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r11.isThumbnail);
  }
}
function GalleryImageComponent_ng_container_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, GalleryImageComponent_ng_container_4_div_1_Template, 1, 1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, GalleryImageComponent_ng_container_4_ng_template_2_Template, 1, 1, "ng-template", null, 12, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r2.loaderTemplate)("ngIfElse", _r10);
  }
}
const _c0 = ["video"];
function GalleryVideoComponent_source_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "source", 3);
  }
  if (rf & 2) {
    const src_r2 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", src_r2 == null ? null : src_r2.url, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"])("type", src_r2 == null ? null : src_r2.type);
  }
}
const _c1 = ["iframe"];
function GalleryItemComponent_ng_container_0_ng_container_1_ng_container_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](0);
  }
}
const _c2 = function (a0, a1, a2, a3) {
  return {
    index: a0,
    currIndex: a1,
    type: a2,
    data: a3
  };
};
function GalleryItemComponent_ng_container_0_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "gallery-image", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("error", function GalleryItemComponent_ng_container_0_ng_container_1_Template_gallery_image_error_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r7.error.emit($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, GalleryItemComponent_ng_container_0_ng_container_1_ng_container_3_Template, 1, 0, "ng-container", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", ctx_r1.data.src)("alt", ctx_r1.data.alt)("loadingIcon", ctx_r1.config.loadingIcon)("loadingError", ctx_r1.config.loadingError);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r1.config.itemTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction4"](6, _c2, ctx_r1.index, ctx_r1.currIndex, ctx_r1.type, ctx_r1.data));
  }
}
function GalleryItemComponent_ng_container_0_gallery_video_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "gallery-video", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("error", function GalleryItemComponent_ng_container_0_gallery_video_2_Template_gallery_video_error_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r10);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r9.error.emit($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", ctx_r2.data.src)("poster", ctx_r2.data.poster)("controls", ctx_r2.data.controls)("play", ctx_r2.isAutoPlay)("pause", ctx_r2.currIndex !== ctx_r2.index);
  }
}
function GalleryItemComponent_ng_container_0_gallery_iframe_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "gallery-iframe", 11);
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", ctx_r3.youtubeSrc)("autoplay", ctx_r3.isAutoPlay)("pause", ctx_r3.currIndex !== ctx_r3.index);
  }
}
function GalleryItemComponent_ng_container_0_gallery_iframe_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "gallery-iframe", 12);
  }
  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", ctx_r4.data.src);
  }
}
function GalleryItemComponent_ng_container_0_ng_container_5_ng_container_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](0);
  }
}
function GalleryItemComponent_ng_container_0_ng_container_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, GalleryItemComponent_ng_container_0_ng_container_5_ng_container_2_Template, 1, 0, "ng-container", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r5.config.itemTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction4"](2, _c2, ctx_r5.index, ctx_r5.currIndex, ctx_r5.type, ctx_r5.data));
  }
}
function GalleryItemComponent_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0, 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, GalleryItemComponent_ng_container_0_ng_container_1_Template, 4, 11, "ng-container", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, GalleryItemComponent_ng_container_0_gallery_video_2_Template, 1, 5, "gallery-video", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, GalleryItemComponent_ng_container_0_gallery_iframe_3_Template, 1, 3, "gallery-iframe", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, GalleryItemComponent_ng_container_0_gallery_iframe_4_Template, 1, 1, "gallery-iframe", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, GalleryItemComponent_ng_container_0_ng_container_5_Template, 3, 7, "ng-container", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitch", ctx_r0.type);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", ctx_r0.Types.Image);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", ctx_r0.Types.Video);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", ctx_r0.Types.Youtube);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", ctx_r0.Types.Iframe);
  }
}
const _c3 = ["container"];
const _c4 = ["slider"];
function GallerySliderComponent_gallery_item_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "gallery-item", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("tapClick", function GallerySliderComponent_gallery_item_4_Template_gallery_item_tapClick_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const i_r4 = restoredCtx.index;
      const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r5.itemClick.emit(i_r4));
    })("error", function GallerySliderComponent_gallery_item_4_Template_gallery_item_error_0_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const i_r4 = restoredCtx.index;
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r7.error.emit({
        itemIndex: i_r4,
        error: $event
      }));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r3 = ctx.$implicit;
    const i_r4 = ctx.index;
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("type", item_r3.type)("config", ctx_r2.config)("data", item_r3.data)("currIndex", ctx_r2.state.currIndex)("index", i_r4);
  }
}
const _c5 = ["*"];
function GalleryThumbComponent_div_1_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](0);
  }
}
const _c6 = function (a0, a1, a2) {
  return {
    index: a0,
    type: a1,
    data: a2
  };
};
function GalleryThumbComponent_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, GalleryThumbComponent_div_1_ng_container_1_Template, 1, 0, "ng-container", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r0.config.thumbTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction3"](2, _c6, ctx_r0.index, ctx_r0.type, ctx_r0.data));
  }
}
function GalleryThumbsComponent_gallery_thumb_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "gallery-thumb", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("tapClick", function GalleryThumbsComponent_gallery_thumb_3_Template_gallery_thumb_tapClick_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);
      const i_r3 = restoredCtx.index;
      const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r4.thumbClick.emit(i_r3));
    })("error", function GalleryThumbsComponent_gallery_thumb_3_Template_gallery_thumb_error_0_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);
      const i_r3 = restoredCtx.index;
      const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r6.error.emit({
        itemIndex: i_r3,
        error: $event
      }));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const i_r3 = ctx.index;
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("type", item_r2.type)("config", ctx_r1.config)("data", item_r2.data)("currIndex", ctx_r1.state.currIndex)("index", i_r3)("tapClickDisabled", ctx_r1.config.disableThumb);
  }
}
function GalleryCoreComponent_gallery_thumbs_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "gallery-thumbs", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("action", function GalleryCoreComponent_gallery_thumbs_0_Template_gallery_thumbs_action_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);
      const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r4.action.emit($event));
    })("thumbClick", function GalleryCoreComponent_gallery_thumbs_0_Template_gallery_thumbs_thumbClick_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);
      const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r6.thumbClick.emit($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("state", ctx_r0.state)("config", ctx_r0.config);
  }
}
function GalleryCoreComponent_gallery_nav_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "gallery-nav", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("action", function GalleryCoreComponent_gallery_nav_3_Template_gallery_nav_action_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r7.action.emit($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("state", ctx_r1.state)("config", ctx_r1.config);
  }
}
function GalleryCoreComponent_gallery_dots_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "gallery-dots", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("action", function GalleryCoreComponent_gallery_dots_4_Template_gallery_dots_action_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r10);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r9.action.emit($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("state", ctx_r2.state)("config", ctx_r2.config);
  }
}
function GalleryCoreComponent_gallery_counter_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "gallery-counter", 7);
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("state", ctx_r3.state);
  }
}
var GalleryAction;
(function (GalleryAction) {
  GalleryAction["INITIALIZED"] = "initialized";
  GalleryAction["ITEMS_CHANGED"] = "itemsChanged";
  GalleryAction["INDEX_CHANGED"] = "indexChanged";
  GalleryAction["PLAY"] = "play";
  GalleryAction["STOP"] = "stop";
})(GalleryAction || (GalleryAction = {}));
var ImageSize;
(function (ImageSize) {
  ImageSize["Cover"] = "cover";
  ImageSize["Contain"] = "contain";
})(ImageSize || (ImageSize = {}));
var LoadingStrategy;
(function (LoadingStrategy) {
  LoadingStrategy["Preload"] = "preload";
  LoadingStrategy["Lazy"] = "lazy";
  LoadingStrategy["Default"] = "default";
})(LoadingStrategy || (LoadingStrategy = {}));
var ThumbnailsPosition;
(function (ThumbnailsPosition) {
  ThumbnailsPosition["Top"] = "top";
  ThumbnailsPosition["Left"] = "left";
  ThumbnailsPosition["Right"] = "right";
  ThumbnailsPosition["Bottom"] = "bottom";
})(ThumbnailsPosition || (ThumbnailsPosition = {}));
var ImageLoaderMode;
(function (ImageLoaderMode) {
  ImageLoaderMode["Determinate"] = "determinate";
  ImageLoaderMode["Indeterminate"] = "indeterminate";
})(ImageLoaderMode || (ImageLoaderMode = {}));
var DotsPosition;
(function (DotsPosition) {
  DotsPosition["Top"] = "top";
  DotsPosition["Bottom"] = "bottom";
})(DotsPosition || (DotsPosition = {}));
var CounterPosition;
(function (CounterPosition) {
  CounterPosition["Top"] = "top";
  CounterPosition["Bottom"] = "bottom";
})(CounterPosition || (CounterPosition = {}));
var ThumbnailsMode;
(function (ThumbnailsMode) {
  ThumbnailsMode["Free"] = "free";
  ThumbnailsMode["Strict"] = "strict";
})(ThumbnailsMode || (ThumbnailsMode = {}));
var SlidingDirection;
(function (SlidingDirection) {
  SlidingDirection["Horizontal"] = "horizontal";
  SlidingDirection["Vertical"] = "vertical";
})(SlidingDirection || (SlidingDirection = {}));
var GalleryItemType;
(function (GalleryItemType) {
  GalleryItemType["Image"] = "image";
  GalleryItemType["Video"] = "video";
  GalleryItemType["Youtube"] = "youtube";
  GalleryItemType["Iframe"] = "iframe";
})(GalleryItemType || (GalleryItemType = {}));
var ThumbnailsView;
(function (ThumbnailsView) {
  ThumbnailsView["Default"] = "default";
  ThumbnailsView["Contain"] = "contain";
})(ThumbnailsView || (ThumbnailsView = {}));

/** Initial state */
const defaultState = {
  action: GalleryAction.INITIALIZED,
  isPlaying: false,
  hasNext: false,
  hasPrev: false,
  currIndex: 0,
  items: []
};
const defaultConfig = {
  nav: true,
  loop: true,
  zoomOut: 0,
  dots: false,
  thumb: true,
  dotsSize: 30,
  counter: true,
  gestures: true,
  autoPlay: false,
  thumbWidth: 120,
  thumbHeight: 90,
  panSensitivity: 25,
  disableThumb: false,
  playerInterval: 3000,
  reserveGesturesAction: false,
  imageSize: ImageSize.Contain,
  thumbMode: ThumbnailsMode.Strict,
  dotsPosition: DotsPosition.Bottom,
  counterPosition: CounterPosition.Top,
  thumbPosition: ThumbnailsPosition.Bottom,
  loadingStrategy: LoadingStrategy.Default,
  slidingDirection: SlidingDirection.Horizontal,
  navIcon: `<?xml version="1.0" encoding="UTF-8"?><svg width="512px" height="512px" enable-background="new 0 0 240.823 240.823" version="1.1" viewBox="0 0 240.823 240.823" xml:space="preserve" xmlns="http://www.w3.org/2000/svg"><path d="m183.19 111.82l-108.3-108.26c-4.752-4.74-12.451-4.74-17.215 0-4.752 4.74-4.752 12.439 0 17.179l99.707 99.671-99.695 99.671c-4.752 4.74-4.752 12.439 0 17.191 4.752 4.74 12.463 4.74 17.215 0l108.3-108.26c4.68-4.691 4.68-12.511-0.012-17.19z" fill="#fff"/></svg>`,
  loadingIcon: `<?xml version="1.0" encoding="UTF-8"?><svg stroke="#fff" viewBox="0 0 44 44" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd" stroke-width="2"><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle></g></svg>`
};
class ImageItem {
  constructor(data) {
    this.data = data;
    this.type = GalleryItemType.Image;
  }
}
class VideoItem {
  constructor(data) {
    this.data = data;
    this.type = GalleryItemType.Video;
  }
}
class IframeItem {
  constructor(data) {
    this.data = data;
    this.type = GalleryItemType.Iframe;
  }
}
class YoutubeItem {
  constructor(data) {
    this.data = {
      ...data,
      ...{
        src: `https://youtube.com/embed/${data.src}`,
        thumb: data.thumb ? data.thumb : `//img.youtube.com/vi/${data.src}/default.jpg`
      }
    };
    this.type = GalleryItemType.Youtube;
  }
}
const filterActions = actions => {
  return (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.filter)(state => actions.indexOf(state.action) > -1);
};
class GalleryRef {
  constructor(config, deleteInstance) {
    this.deleteInstance = deleteInstance;
    /** Stream that emits on item click */
    this.itemClick = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Stream that emits on thumbnail click */
    this.thumbClick = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Stream that emits on an error occurs */
    this.error = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    this._state = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject(defaultState);
    this._config = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject(config);
    this.state = this._state.asObservable();
    this.config = this._config.asObservable();
  }
  get stateSnapshot() {
    return this._state.value;
  }
  /** Stream that emits when gallery is initialized/reset */
  get initialized() {
    return this.state.pipe(filterActions([GalleryAction.INITIALIZED]));
  }
  /** Stream that emits when items is changed (items loaded, item added, item removed) */
  get itemsChanged() {
    return this.state.pipe(filterActions([GalleryAction.ITEMS_CHANGED]));
  }
  /** Stream that emits when current item is changed */
  get indexChanged() {
    return this.state.pipe(filterActions([GalleryAction.INDEX_CHANGED]));
  }
  /** Stream that emits when the player should start or stop */
  get playingChanged() {
    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP]));
  }
  /** Stream that emits when the player should start or stop */
  get playerActions() {
    return this.state.pipe(filterActions([GalleryAction.PLAY, GalleryAction.STOP, GalleryAction.INDEX_CHANGED]));
  }
  /**
   * Activate player actions listener
   */
  activatePlayer() {
    return this.playerActions.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.switchMap)(e => e.isPlaying ? (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)({}).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.delay)(this._config.value.playerInterval), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.tap)(() => this.next())) : rxjs__WEBPACK_IMPORTED_MODULE_8__.EMPTY));
  }
  /**
   * Set gallery state
   */
  setState(state) {
    this._state.next({
      ...this.stateSnapshot,
      ...state
    });
  }
  /**
   * Set gallery config
   */
  setConfig(config) {
    this._config.next({
      ...this._config.value,
      ...config
    });
  }
  /**
   * Add gallery item
   */
  add(item, active) {
    const items = [...this.stateSnapshot.items, item];
    this.setState({
      action: GalleryAction.ITEMS_CHANGED,
      items,
      hasNext: items.length > 1,
      currIndex: active ? items.length - 1 : this.stateSnapshot.currIndex
    });
  }
  /**
   * Add image item
   */
  addImage(data, active) {
    this.add(new ImageItem(data), active);
  }
  /**
   * Add video item
   */
  addVideo(data, active) {
    this.add(new VideoItem(data), active);
  }
  /**
   * Add iframe item
   */
  addIframe(data, active) {
    this.add(new IframeItem(data), active);
  }
  /**
   * Add youtube item
   */
  addYoutube(data, active) {
    this.add(new YoutubeItem(data), active);
  }
  /**
   * Remove gallery item
   */
  remove(i) {
    const state = this.stateSnapshot;
    const items = [...state.items.slice(0, i), ...state.items.slice(i + 1, state.items.length)];
    this.setState({
      action: GalleryAction.ITEMS_CHANGED,
      currIndex: i < 1 ? state.currIndex : i - 1,
      items,
      hasNext: items.length > 1,
      hasPrev: i > 0
    });
  }
  /**
   * Load items and reset the state
   */
  load(items) {
    if (items) {
      this.setState({
        action: GalleryAction.ITEMS_CHANGED,
        items,
        hasNext: items.length > 1,
        hasPrev: false
      });
    }
  }
  /**
   * Set active item
   */
  set(i) {
    if (i !== this.stateSnapshot.currIndex) {
      this.setState({
        action: GalleryAction.INDEX_CHANGED,
        currIndex: i,
        hasNext: i < this.stateSnapshot.items.length - 1,
        hasPrev: i > 0
      });
    }
  }
  /**
   * Next item
   */
  next() {
    if (this.stateSnapshot.hasNext) {
      this.set(this.stateSnapshot.currIndex + 1);
    } else if (this._config.value.loop) {
      this.set(0);
    }
  }
  /**
   * Prev item
   */
  prev() {
    if (this.stateSnapshot.hasPrev) {
      this.set(this.stateSnapshot.currIndex - 1);
    } else if (this._config.value.loop) {
      this.set(this.stateSnapshot.items.length - 1);
    }
  }
  /**
   * Start gallery player
   */
  play(interval) {
    if (interval) {
      this.setConfig({
        playerInterval: interval
      });
    }
    this.setState({
      action: GalleryAction.PLAY,
      isPlaying: true
    });
  }
  /**
   * Stop gallery player
   */
  stop() {
    this.setState({
      action: GalleryAction.STOP,
      isPlaying: false
    });
  }
  /**
   * Reset gallery to initial state
   */
  reset() {
    this.setState(defaultState);
  }
  /**
   * Destroy gallery
   */
  destroy() {
    this._state.complete();
    this._config.complete();
    this.itemClick.complete();
    this.thumbClick.complete();
    this.deleteInstance();
  }
}
const GALLERY_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('GALLERY_CONFIG');
class Gallery {
  constructor(config) {
    /** Store gallery instances */
    this._instances = new Map();
    this.config = config ? {
      ...defaultConfig,
      ...config
    } : defaultConfig;
  }
  /**
   * Get or create gallery by ID
   * @param id
   * @param config
   */
  ref(id = 'root', config) {
    if (this._instances.has(id)) {
      const galleryRef = this._instances.get(id);
      if (config) {
        galleryRef.setConfig({
          ...this.config,
          ...config
        });
      }
      return galleryRef;
    } else {
      return this._instances.set(id, new GalleryRef({
        ...this.config,
        ...config
      }, this.deleteInstance(id))).get(id);
    }
  }
  /**
   * Destroy all gallery instances
   */
  destroyAll() {
    this._instances.forEach(ref => ref.destroy());
  }
  /**
   * Reset all gallery instances
   */
  resetAll() {
    this._instances.forEach(ref => ref.reset());
  }
  /**
   * A destroyer function for each gallery instance
   */
  deleteInstance(id) {
    return () => {
      if (this._instances.has(id)) {
        this._instances.delete(id);
      }
    };
  }
}
Gallery.ɵfac = function Gallery_Factory(t) {
  return new (t || Gallery)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](GALLERY_CONFIG, 8));
};
Gallery.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: Gallery,
  factory: Gallery.ɵfac,
  providedIn: 'root'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Gallery, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [GALLERY_CONFIG]
      }]
    }];
  }, null);
})();

/**
 * This directive uses tap event if HammerJS is loaded, otherwise it falls back to normal click event
 */
class TapClick {
  constructor(_el) {
    this._el = _el;
    this.clickListener = rxjs__WEBPACK_IMPORTED_MODULE_9__.Subscription.EMPTY;
    this.tapClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
  ngOnInit() {
    this.activateClickEvent();
  }
  activateClickEvent() {
    if (typeof Hammer !== 'undefined') {
      // Use Hammer.js tap event
      this._hammer = new Hammer(this._el.nativeElement);
      this._hammer.on('tap', () => {
        if (!this.tapClickDisabled) {
          this.tapClick.emit(null);
        }
      });
    } else {
      // Use normal click event
      this.clickListener = (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.fromEvent)(this._el.nativeElement, 'click').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.filter)(() => !this.tapClickDisabled), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.tap)(() => this.tapClick.emit(null))).subscribe();
    }
  }
  ngOnDestroy() {
    if (this._hammer) {
      this._hammer.destroy();
    }
    this.clickListener.unsubscribe();
  }
}
TapClick.ɵfac = function TapClick_Factory(t) {
  return new (t || TapClick)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
};
TapClick.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: TapClick,
  selectors: [["", "tapClick", ""]],
  inputs: {
    tapClickDisabled: "tapClickDisabled"
  },
  outputs: {
    tapClick: "tapClick"
  }
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TapClick, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[tapClick]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }];
  }, {
    tapClickDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    tapClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();
class GalleryNavComponent {
  constructor(_sanitizer) {
    this._sanitizer = _sanitizer;
    this.action = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
  ngOnInit() {
    this.navIcon = this._sanitizer.bypassSecurityTrustHtml(this.config.navIcon);
  }
}
GalleryNavComponent.ɵfac = function GalleryNavComponent_Factory(t) {
  return new (t || GalleryNavComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__.DomSanitizer));
};
GalleryNavComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryNavComponent,
  selectors: [["gallery-nav"]],
  inputs: {
    state: "state",
    config: "config"
  },
  outputs: {
    action: "action"
  },
  decls: 2,
  vars: 2,
  consts: [["class", "g-nav-prev", "aria-label", "Previous", "role", "button", 3, "innerHtml", "tapClick", 4, "ngIf"], ["class", "g-nav-next", "aria-label", "Next", "role", "button", 3, "innerHtml", "tapClick", 4, "ngIf"], ["aria-label", "Previous", "role", "button", 1, "g-nav-prev", 3, "innerHtml", "tapClick"], ["aria-label", "Next", "role", "button", 1, "g-nav-next", 3, "innerHtml", "tapClick"]],
  template: function GalleryNavComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, GalleryNavComponent_i_0_Template, 1, 1, "i", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, GalleryNavComponent_i_1_Template, 1, 1, "i", 1);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.config.loop || ctx.state.hasPrev);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.config.loop || ctx.state.hasNext);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.NgIf, TapClick],
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryNavComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-nav',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <i *ngIf="config.loop || state.hasPrev"
       class="g-nav-prev"
       aria-label="Previous"
       role="button"
       (tapClick)="action.emit('prev')"
       [innerHtml]="navIcon"></i>

    <i *ngIf="config.loop || state.hasNext"
       class="g-nav-next"
       aria-label="Next"
       role="button"
       (tapClick)="action.emit('next')"
       [innerHtml]="navIcon"></i>
  `
    }]
  }], function () {
    return [{
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__.DomSanitizer
    }];
  }, {
    state: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    config: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    action: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();
class GalleryDotsComponent {
  constructor() {
    this.action = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
}
GalleryDotsComponent.ɵfac = function GalleryDotsComponent_Factory(t) {
  return new (t || GalleryDotsComponent)();
};
GalleryDotsComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryDotsComponent,
  selectors: [["gallery-dots"]],
  inputs: {
    state: "state",
    config: "config"
  },
  outputs: {
    action: "action"
  },
  decls: 1,
  vars: 1,
  consts: [["class", "g-dot", 3, "g-dot-active", "width", "height", "tapClick", 4, "ngFor", "ngForOf"], [1, "g-dot", 3, "tapClick"], [1, "g-dot-inner"]],
  template: function GalleryDotsComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, GalleryDotsComponent_div_0_Template, 2, 6, "div", 0);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.state.items);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.NgForOf, TapClick],
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryDotsComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-dots',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <div class="g-dot"
         *ngFor="let item of state.items; let i = index"
         [class.g-dot-active]="i === state.currIndex"
         [style.width.px]="config?.dotsSize"
         [style.height.px]="config?.dotsSize"
         (tapClick)="action.emit(i)">
      <div class="g-dot-inner"></div>
    </div>
  `
    }]
  }], null, {
    state: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    config: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    action: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();
class LazyImage {
  constructor(document) {
    this.document = document;
    this._imageLoader$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    this._loaderSub$ = rxjs__WEBPACK_IMPORTED_MODULE_9__.Subscription.EMPTY;
    this.loaded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this._loaderSub$ = this._imageLoader$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.switchMap)(imageSrc => this.nativeLoader(imageSrc))).subscribe();
  }
  ngOnChanges(changes) {
    if (changes['src'] && changes['src'].previousValue !== changes['src'].currentValue) {
      this.loadImage(this.src);
    }
  }
  ngOnDestroy() {
    this._loaderSub$.unsubscribe();
    this._imageLoader$.complete();
  }
  loadImage(imagePath) {
    this._imageLoader$.next(imagePath);
  }
  /**
   * Native image loader, does not emit progress
   * @param url
   */
  nativeLoader(url) {
    const img = this.document.createElement('img');
    // Stop previously loading
    img.src = url;
    // Image load success
    const loadSuccess = (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.fromEvent)(img, 'load').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.tap)(() => this.loaded.emit(url)));
    // Image load failed
    const loadError = (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.fromEvent)(img, 'error').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.tap)(() => this.error.emit(new Error(`[lazyImage]: The image ${url} did not load`))));
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.zip)(loadSuccess, loadError);
  }
}
LazyImage.ɵfac = function LazyImage_Factory(t) {
  return new (t || LazyImage)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__.DOCUMENT));
};
LazyImage.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: LazyImage,
  selectors: [["", "lazyImage", ""]],
  inputs: {
    src: ["lazyImage", "src"]
  },
  outputs: {
    loaded: "loaded",
    error: "error"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LazyImage, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[lazyImage]'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.DOCUMENT]
      }]
    }];
  }, {
    src: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['lazyImage']
    }],
    loaded: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();
class GalleryImageComponent {
  constructor(_sanitizer) {
    this._sanitizer = _sanitizer;
    /** Stream that emits the state */
    this._state = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject('loading');
    this.state = this._state.asObservable();
    /** Progress value */
    this.progress = 0;
    /** Stream that emits when an error occurs */
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
  get imageLoadSuccess() {
    return !!this.imageUrl;
  }
  get imageLoadFailed() {
    return !!this.loadError;
  }
  ngOnInit() {
    if (this.loadingIcon) {
      this.loaderTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingIcon);
    }
    if (this.loadingError) {
      this.errorTemplate = this._sanitizer.bypassSecurityTrustHtml(this.loadingError);
    }
  }
  ngOnDestroy() {
    this._state.complete();
  }
  onProgress({
    loaded,
    total
  }) {
    this.progress = loaded * 100 / total;
  }
  onLoaded(blobUrl) {
    this.imageUrl = this._sanitizer.bypassSecurityTrustUrl(blobUrl);
    this._state.next('success');
  }
  onError(err) {
    this.loadError = err;
    this._state.next('failed');
    this.error.emit(err);
  }
}
GalleryImageComponent.ɵfac = function GalleryImageComponent_Factory(t) {
  return new (t || GalleryImageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__.DomSanitizer));
};
GalleryImageComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryImageComponent,
  selectors: [["gallery-image"]],
  hostVars: 4,
  hostBindings: function GalleryImageComponent_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("g-image-loaded", ctx.imageLoadSuccess)("g-image-error", ctx.imageLoadFailed);
    }
  },
  inputs: {
    isThumbnail: "isThumbnail",
    alt: "alt",
    src: "src",
    loadingIcon: "loadingIcon",
    loadingError: "loadingError"
  },
  outputs: {
    error: "error"
  },
  decls: 5,
  vars: 7,
  consts: [[3, "lazyImage", "ngSwitch", "progress", "loaded", "error"], ["class", "g-image-item", 3, "src", 4, "ngSwitchCase"], ["class", "g-image-error-message", 4, "ngSwitchCase"], [4, "ngSwitchCase"], [1, "g-image-item", 3, "src"], [1, "g-image-error-message"], [3, "innerHTML", 4, "ngIf", "ngIfElse"], ["defaultError", ""], [3, "innerHTML"], [4, "ngIf", "ngIfElse"], ["isLarge", ""], ["class", "g-loading", 3, "innerHTML", 4, "ngIf", "ngIfElse"], ["defaultLoader", ""], [1, "g-loading", 3, "innerHTML"], ["class", "g-thumb-loading", 4, "ngIf"], [1, "g-thumb-loading"]],
  template: function GalleryImageComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0, 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("progress", function GalleryImageComponent_Template_ng_container_progress_0_listener($event) {
        return ctx.onProgress($event);
      })("loaded", function GalleryImageComponent_Template_ng_container_loaded_0_listener($event) {
        return ctx.onLoaded($event);
      })("error", function GalleryImageComponent_Template_ng_container_error_0_listener($event) {
        return ctx.onError($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "async");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, GalleryImageComponent_img_2_Template, 1, 3, "img", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, GalleryImageComponent_div_3_Template, 4, 2, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, GalleryImageComponent_ng_container_4_Template, 4, 2, "ng-container", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("lazyImage", ctx.src)("ngSwitch", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 5, ctx.state));
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", "success");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", "failed");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngSwitchCase", "loading");
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_12__.NgSwitch, _angular_common__WEBPACK_IMPORTED_MODULE_12__.NgSwitchCase, LazyImage, _angular_common__WEBPACK_IMPORTED_MODULE_12__.AsyncPipe],
  encapsulation: 2,
  data: {
    animation: [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.trigger)('fadeIn', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.transition)(':enter', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.style)({
      opacity: 0
    }), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.animate)('300ms ease-in', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.style)({
      opacity: 1
    }))])])]
  },
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryImageComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-image',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      animations: [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.trigger)('fadeIn', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.transition)(':enter', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.style)({
        opacity: 0
      }), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.animate)('300ms ease-in', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_14__.style)({
        opacity: 1
      }))])])],
      template: `
    <ng-container [lazyImage]="src"
                  (progress)="onProgress($event)"
                  (loaded)="onLoaded($event)"
                  (error)="onError($event)"
                  [ngSwitch]="state | async">

      <img *ngSwitchCase="'success'"
           @fadeIn
           [src]="imageUrl"
           [attr.alt]="alt"
           class="g-image-item"/>

      <div *ngSwitchCase="'failed'"
           class="g-image-error-message">
        <div *ngIf="errorTemplate; else defaultError"
             [innerHTML]="errorTemplate"></div>
        <ng-template #defaultError>
          <ng-container *ngIf="isThumbnail; else isLarge">
            <h4>⚠</h4>
          </ng-container>
          <ng-template #isLarge>
            <h2>⚠</h2>
            <p>Unable to load the image!</p>
          </ng-template>
        </ng-template>
      </div>

      <ng-container *ngSwitchCase="'loading'">
        <div *ngIf="loaderTemplate; else defaultLoader"
             class="g-loading"
             [innerHTML]="loaderTemplate">
        </div>
        <ng-template #defaultLoader>
          <div *ngIf="isThumbnail" class="g-thumb-loading"></div>
        </ng-template>
      </ng-container>
    </ng-container>
  `
    }]
  }], function () {
    return [{
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__.DomSanitizer
    }];
  }, {
    isThumbnail: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    alt: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    src: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    loadingIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    loadingError: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    imageLoadSuccess: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.g-image-loaded']
    }],
    imageLoadFailed: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.g-image-error']
    }]
  });
})();
class GalleryVideoComponent {
  constructor() {
    /** Stream that emits when an error occurs */
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
  set pauseVideo(shouldPause) {
    if (this.video.nativeElement) {
      const video = this.video.nativeElement;
      if (shouldPause && !video.paused) {
        video.pause();
      }
    }
  }
  set playVideo(shouldPlay) {
    if (this.video.nativeElement) {
      const video = this.video.nativeElement;
      if (shouldPlay) {
        video.play();
      }
    }
  }
  ngOnInit() {
    if (this.src instanceof Array) {
      // If video has multiple sources
      this.videoSources = [...this.src];
    } else {
      this.videoSources = [{
        url: this.src
      }];
    }
    this.controls = typeof this.controlsEnabled === 'boolean' ? this.controlsEnabled : true;
  }
}
GalleryVideoComponent.ɵfac = function GalleryVideoComponent_Factory(t) {
  return new (t || GalleryVideoComponent)();
};
GalleryVideoComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryVideoComponent,
  selectors: [["gallery-video"]],
  viewQuery: function GalleryVideoComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 7);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.video = _t.first);
    }
  },
  inputs: {
    src: "src",
    poster: "poster",
    controlsEnabled: ["controls", "controlsEnabled"],
    pauseVideo: ["pause", "pauseVideo"],
    playVideo: ["play", "playVideo"]
  },
  outputs: {
    error: "error"
  },
  decls: 3,
  vars: 3,
  consts: [[3, "controls", "poster", "error"], ["video", ""], [3, "src", "type", 4, "ngFor", "ngForOf"], [3, "src", "type"]],
  template: function GalleryVideoComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "video", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("error", function GalleryVideoComponent_Template_video_error_0_listener($event) {
        return ctx.error.emit($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, GalleryVideoComponent_source_2_Template, 1, 2, "source", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("controls", ctx.controls)("poster", ctx.poster, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"]);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.videoSources);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.NgForOf],
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryVideoComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-video',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <video #video [controls]="controls" [poster]="poster" (error)="error.emit($event)">
      <source *ngFor="let src of videoSources" [src]="src?.url" [type]="src?.type"/>
    </video>
  `
    }]
  }], null, {
    src: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    poster: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    controlsEnabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['controls']
    }],
    pauseVideo: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['pause']
    }],
    playVideo: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['play']
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    video: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['video', {
        static: true
      }]
    }]
  });
})();
class GalleryIframeComponent {
  constructor(_sanitizer) {
    this._sanitizer = _sanitizer;
  }
  set src(src) {
    this.videoSrc = src;
    this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(src);
  }
  set pauseVideo(shouldPause) {
    if (this.iframe.nativeElement) {
      if (shouldPause) {
        const iframe = this.iframe.nativeElement;
        iframe.src = null;
        if (!this.autoplay && this.videoSrc) {
          this.iframeSrc = this._sanitizer.bypassSecurityTrustResourceUrl(this.videoSrc);
        }
      }
    }
  }
}
GalleryIframeComponent.ɵfac = function GalleryIframeComponent_Factory(t) {
  return new (t || GalleryIframeComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__.DomSanitizer));
};
GalleryIframeComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryIframeComponent,
  selectors: [["gallery-iframe"]],
  viewQuery: function GalleryIframeComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c1, 7);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.iframe = _t.first);
    }
  },
  inputs: {
    src: "src",
    pauseVideo: ["pause", "pauseVideo"],
    autoplay: "autoplay"
  },
  decls: 2,
  vars: 2,
  consts: [["frameborder", "0", "allowfullscreen", "", 3, "src"], ["iframe", ""]],
  template: function GalleryIframeComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "iframe", 0, 1);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", ctx.iframeSrc, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeResourceUrl"]);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("allow", ctx.autoplay ? "autoplay" : "", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵvalidateIframeAttribute"]);
    }
  },
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryIframeComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-iframe',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <iframe #iframe
            frameborder="0"
            allowfullscreen
            [attr.allow]="autoplay ? 'autoplay' : ''"
            [src]="iframeSrc">
    </iframe>
  `
    }]
  }], function () {
    return [{
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__.DomSanitizer
    }];
  }, {
    src: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['src']
    }],
    pauseVideo: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['pause']
    }],
    autoplay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    iframe: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['iframe', {
        static: true
      }]
    }]
  });
})();
class GalleryItemComponent {
  constructor() {
    this.Types = GalleryItemType;
    /** Stream that emits when an error occurs */
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
  get isActive() {
    return this.index === this.currIndex;
  }
  get isAutoPlay() {
    if (this.isActive) {
      if (this.type === GalleryItemType.Video || this.type === GalleryItemType.Youtube) {
        return this.data.autoplay;
      }
    }
  }
  get youtubeSrc() {
    let autoplay = 0;
    if (this.isActive && this.type === GalleryItemType.Youtube && this.data.autoplay) {
      autoplay = 1;
    }
    const url = new URL(this.data.src);
    url.search = new URLSearchParams({
      wmode: 'transparent',
      ...this.data.params,
      autoplay
    }).toString();
    return url.href;
  }
  get load() {
    switch (this.config.loadingStrategy) {
      case LoadingStrategy.Preload:
        return true;
      case LoadingStrategy.Lazy:
        return this.currIndex === this.index;
      default:
        return this.currIndex === this.index || this.currIndex === this.index - 1 || this.currIndex === this.index + 1;
    }
  }
}
GalleryItemComponent.ɵfac = function GalleryItemComponent_Factory(t) {
  return new (t || GalleryItemComponent)();
};
GalleryItemComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryItemComponent,
  selectors: [["gallery-item"]],
  hostVars: 2,
  hostBindings: function GalleryItemComponent_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("g-active-item", ctx.isActive);
    }
  },
  inputs: {
    config: "config",
    index: "index",
    currIndex: "currIndex",
    type: "type",
    data: "data"
  },
  outputs: {
    error: "error"
  },
  decls: 1,
  vars: 1,
  consts: [[3, "ngSwitch", 4, "ngIf"], [3, "ngSwitch"], [4, "ngSwitchCase"], [3, "src", "poster", "controls", "play", "pause", "error", 4, "ngSwitchCase"], [3, "src", "autoplay", "pause", 4, "ngSwitchCase"], [3, "src", 4, "ngSwitchCase"], [4, "ngSwitchDefault"], [3, "src", "alt", "loadingIcon", "loadingError", "error"], [1, "g-template", "g-item-template"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "src", "poster", "controls", "play", "pause", "error"], [3, "src", "autoplay", "pause"], [3, "src"]],
  template: function GalleryItemComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, GalleryItemComponent_ng_container_0_Template, 6, 5, "ng-container", 0);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.load);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_12__.NgTemplateOutlet, _angular_common__WEBPACK_IMPORTED_MODULE_12__.NgSwitch, _angular_common__WEBPACK_IMPORTED_MODULE_12__.NgSwitchCase, _angular_common__WEBPACK_IMPORTED_MODULE_12__.NgSwitchDefault, GalleryImageComponent, GalleryVideoComponent, GalleryIframeComponent],
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryItemComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-item',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <ng-container *ngIf="load" [ngSwitch]="type">

      <ng-container *ngSwitchCase="Types.Image">

        <gallery-image [src]="data.src"
                       [alt]="data.alt"
                       [loadingIcon]="config.loadingIcon"
                       [loadingError]="config.loadingError"
                       (error)="error.emit($event)"></gallery-image>

        <div class="g-template g-item-template">
          <ng-container *ngTemplateOutlet="config.itemTemplate;
          context: { index: this.index, currIndex: this.currIndex, type: this.type, data: this.data }">
          </ng-container>
        </div>

      </ng-container>

      <gallery-video *ngSwitchCase="Types.Video"
                     [src]="data.src"
                     [poster]="data.poster"
                     [controls]="data.controls"
                     [play]="isAutoPlay"
                     [pause]="currIndex !== index"
                     (error)="error.emit($event)"></gallery-video>

      <gallery-iframe *ngSwitchCase="Types.Youtube"
                      [src]="youtubeSrc"
                      [autoplay]="isAutoPlay"
                      [pause]="currIndex !== index"></gallery-iframe>

      <gallery-iframe *ngSwitchCase="Types.Iframe"
                      [src]="data.src"></gallery-iframe>

      <ng-container *ngSwitchDefault>

        <div class="g-template g-item-template">
          <ng-container *ngTemplateOutlet="config.itemTemplate;
          context: { index: this.index, currIndex: this.currIndex, type: this.type, data: this.data }">
          </ng-container>
        </div>

      </ng-container>

    </ng-container>
  `
    }]
  }], null, {
    config: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    index: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    currIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    isActive: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.g-active-item']
    }]
  });
})();
class GallerySliderComponent {
  constructor(_el, _zone, _platform) {
    this._el = _el;
    this._zone = _zone;
    this._platform = _platform;
    /** Sliding worker */
    this._slidingWorker$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject({
      value: 0,
      instant: true
    });
    /** Stream that emits when the active item should change */
    this.action = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /** Stream that emits when item is clicked */
    this.itemClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /** Stream that emits when an error occurs */
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    // Activate sliding worker
    this.sliderState$ = this._slidingWorker$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.map)(state => ({
      style: this.getSliderStyles(state),
      instant: state.instant
    })));
  }
  get container() {
    return this.containerEl.nativeElement;
  }
  get slider() {
    return this.sliderEl.nativeElement;
  }
  /** Item zoom */
  get zoom() {
    return {
      transform: `perspective(50px) translate3d(0, 0, ${-this.config.zoomOut}px)`
    };
  }
  ngOnChanges(changes) {
    // Refresh the slider
    if (changes.state) {
      this.updateSlider({
        value: 0,
        instant: changes.state.firstChange
      });
    }
    // Enable/Disable gestures on changes
    if (changes.config && changes.config.currentValue?.gestures !== changes.config.previousValue?.gestures) {
      if (this.config.gestures) {
        this.activateGestures();
      } else {
        this.deactivateGestures();
      }
    }
  }
  ngOnInit() {
    this._zone.runOutsideAngular(() => {
      // Set styles manually avoid triggering change detection on dragging
      this._sliderStateSub$ = this.sliderState$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.tap)(state => {
        this.slider.style.transform = state.style.transform;
        this.slider.style.height = state.style.height;
        this.slider.style.width = state.style.width;
        this.slider.classList.toggle('g-no-transition', state.instant);
        this.container.style.transform = this.zoom.transform;
      })).subscribe();
    });
    // Rearrange slider on window resize
    if ((0,_angular_common__WEBPACK_IMPORTED_MODULE_12__.isPlatformBrowser)(this._platform)) {
      this._resizeSub$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.fromEvent)(window, 'resize').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.debounceTime)(200), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.tap)(() => this.updateSlider({
        value: 0,
        instant: true
      }))).subscribe();
    }
  }
  ngOnDestroy() {
    this.deactivateGestures();
    this._resizeSub$?.unsubscribe();
    this._sliderStateSub$?.unsubscribe();
    this._slidingWorker$.complete();
  }
  activateGestures() {
    if (typeof Hammer !== 'undefined') {
      let direction;
      let touchAction = 'compute';
      if (this.config.slidingDirection === SlidingDirection.Horizontal) {
        direction = Hammer.DIRECTION_HORIZONTAL;
        if (this.config.reserveGesturesAction) {
          touchAction = 'pan-x';
        }
      } else {
        direction = Hammer.DIRECTION_VERTICAL;
        if (this.config.reserveGesturesAction) {
          touchAction = 'pan-y';
        }
      }
      // Activate gestures
      this._hammer = new Hammer(this._el.nativeElement, {
        touchAction
      });
      this._hammer.get('pan').set({
        direction
      });
      this._zone.runOutsideAngular(() => {
        this._hammer.on('pan', e => {
          switch (this.config.slidingDirection) {
            case SlidingDirection.Horizontal:
              if (e.isFinal) {
                this.updateSlider({
                  value: 0,
                  instant: false
                });
                this.horizontalPan(e);
              } else {
                this.updateSlider({
                  value: e.deltaX,
                  instant: true
                });
              }
              break;
            case SlidingDirection.Vertical:
              if (e.isFinal) {
                this.updateSlider({
                  value: 0,
                  instant: false
                });
                this.verticalPan(e);
              } else {
                this.updateSlider({
                  value: e.deltaY,
                  instant: true
                });
              }
          }
        });
      });
    }
  }
  deactivateGestures() {
    this._hammer?.destroy();
  }
  /**
   * Convert sliding state to styles
   */
  getSliderStyles(state) {
    switch (this.config.slidingDirection) {
      case SlidingDirection.Horizontal:
        return {
          transform: `translate3d(${-(this.state.currIndex * this._el.nativeElement.offsetWidth) + state.value}px, 0, 0)`,
          width: `calc(100% * ${this.state.items.length})`,
          height: '100%'
        };
      case SlidingDirection.Vertical:
        return {
          transform: `translate3d(0, ${-(this.state.currIndex * this._el.nativeElement.offsetHeight) + state.value}px, 0)`,
          width: '100%',
          height: `calc(100% * ${this.state.items.length})`
        };
    }
  }
  verticalPan(e) {
    if (!(e.direction & Hammer.DIRECTION_UP && e.offsetDirection & Hammer.DIRECTION_VERTICAL)) {
      return;
    }
    if (e.velocityY > 0.3) {
      this.prev();
    } else if (e.velocityY < -0.3) {
      this.next();
    } else {
      if (e.deltaY / 2 <= -this._el.nativeElement.offsetHeight * this.state.items.length / this.config.panSensitivity) {
        this.next();
      } else if (e.deltaY / 2 >= this._el.nativeElement.offsetHeight * this.state.items.length / this.config.panSensitivity) {
        this.prev();
      } else {
        this.action.emit(this.state.currIndex);
      }
    }
  }
  horizontalPan(e) {
    if (!(e.direction & Hammer.DIRECTION_HORIZONTAL && e.offsetDirection & Hammer.DIRECTION_HORIZONTAL)) {
      return;
    }
    if (e.velocityX > 0.3) {
      this.prev();
    } else if (e.velocityX < -0.3) {
      this.next();
    } else {
      if (e.deltaX / 2 <= -this._el.nativeElement.offsetWidth * this.state.items.length / this.config.panSensitivity) {
        this.next();
      } else if (e.deltaX / 2 >= this._el.nativeElement.offsetWidth * this.state.items.length / this.config.panSensitivity) {
        this.prev();
      } else {
        this.action.emit(this.state.currIndex);
      }
    }
  }
  next() {
    this.action.emit('next');
  }
  prev() {
    this.action.emit('prev');
  }
  updateSlider(state) {
    const newState = {
      ...this._slidingWorker$.value,
      ...state
    };
    this._slidingWorker$.next(newState);
  }
}
GallerySliderComponent.ɵfac = function GallerySliderComponent_Factory(t) {
  return new (t || GallerySliderComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID));
};
GallerySliderComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GallerySliderComponent,
  selectors: [["gallery-slider"]],
  viewQuery: function GallerySliderComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c3, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c4, 7);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.containerEl = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sliderEl = _t.first);
    }
  },
  inputs: {
    state: "state",
    config: "config"
  },
  outputs: {
    action: "action",
    itemClick: "itemClick",
    error: "error"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
  ngContentSelectors: _c5,
  decls: 6,
  vars: 1,
  consts: [[1, "g-items-container"], ["container", ""], [1, "g-slider"], ["slider", ""], [3, "type", "config", "data", "currIndex", "index", "tapClick", "error", 4, "ngFor", "ngForOf"], [3, "type", "config", "data", "currIndex", "index", "tapClick", "error"]],
  template: function GallerySliderComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0, 1)(2, "div", 2, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, GallerySliderComponent_gallery_item_4_Template, 1, 5, "gallery-item", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](5);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.state.items);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.NgForOf, GalleryItemComponent, TapClick],
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GallerySliderComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-slider',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <div #container class="g-items-container">
      <div #slider class="g-slider">
        <gallery-item *ngFor="let item of state.items; let i = index"
                      [type]="item.type"
                      [config]="config"
                      [data]="item.data"
                      [currIndex]="state.currIndex"
                      [index]="i"
                      (tapClick)="itemClick.emit(i)"
                      (error)="error.emit({itemIndex: i, error: $event})">
        </gallery-item>
      </div>
    </div>
    <ng-content></ng-content>
  `
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: Object,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }];
  }, {
    state: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    config: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    action: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    itemClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    containerEl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['container', {
        static: true
      }]
    }],
    sliderEl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['slider', {
        static: true
      }]
    }]
  });
})();
class GalleryCounterComponent {}
GalleryCounterComponent.ɵfac = function GalleryCounterComponent_Factory(t) {
  return new (t || GalleryCounterComponent)();
};
GalleryCounterComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryCounterComponent,
  selectors: [["gallery-counter"]],
  inputs: {
    state: "state"
  },
  decls: 2,
  vars: 1,
  consts: [[1, "g-counter"]],
  template: function GalleryCounterComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.state.currIndex + 1 + "/" + ctx.state.items.length);
    }
  },
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryCounterComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-counter',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <div class="g-counter">{{(state.currIndex + 1) + '/' + state.items.length}}</div>
  `
    }]
  }], null, {
    state: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }]
  });
})();
class GalleryThumbComponent {
  constructor() {
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
  get isActive() {
    return this.index === this.currIndex;
  }
}
GalleryThumbComponent.ɵfac = function GalleryThumbComponent_Factory(t) {
  return new (t || GalleryThumbComponent)();
};
GalleryThumbComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryThumbComponent,
  selectors: [["gallery-thumb"]],
  hostVars: 2,
  hostBindings: function GalleryThumbComponent_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("g-active-thumb", ctx.isActive);
    }
  },
  inputs: {
    config: "config",
    index: "index",
    currIndex: "currIndex",
    type: "type",
    data: "data"
  },
  outputs: {
    error: "error"
  },
  decls: 2,
  vars: 6,
  consts: [[3, "src", "alt", "isThumbnail", "loadingIcon", "loadingError", "error"], ["class", "g-template g-thumb-template", 4, "ngIf"], [1, "g-template", "g-thumb-template"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"]],
  template: function GalleryThumbComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "gallery-image", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("error", function GalleryThumbComponent_Template_gallery_image_error_0_listener($event) {
        return ctx.error.emit($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, GalleryThumbComponent_div_1_Template, 2, 6, "div", 1);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", ctx.data.thumb)("alt", ctx.data.alt + "-thumbnail")("isThumbnail", true)("loadingIcon", ctx.config.thumbLoadingIcon)("loadingError", ctx.config.thumbLoadingError);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.config.thumbTemplate);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_12__.NgTemplateOutlet, GalleryImageComponent],
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryThumbComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-thumb',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <gallery-image [src]="data.thumb"
                   [alt]="data.alt + '-thumbnail'"
                   [isThumbnail]="true"
                   [loadingIcon]="config.thumbLoadingIcon"
                   [loadingError]="config.thumbLoadingError"
                   (error)="error.emit($event)"></gallery-image>

    <div *ngIf="config.thumbTemplate" class="g-template g-thumb-template">
      <ng-container
        *ngTemplateOutlet="config.thumbTemplate; context: { index: this.index, type: this.type, data: this.data }">
      </ng-container>
    </div>
  `
    }]
  }], null, {
    config: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    index: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    currIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    isActive: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.g-active-thumb']
    }]
  });
})();
class GalleryThumbsComponent {
  constructor(_el, _zone) {
    this._el = _el;
    this._zone = _zone;
    /** Sliding worker */
    this._slidingWorker$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject({
      value: 0,
      instant: true
    });
    /** Current slider position in free sliding mode */
    this._freeModeCurrentOffset = 0;
    /** Thumbnails view enum */
    this.thumbnailsView = ThumbnailsView;
    /** Stream that emits when the active item should change */
    this.action = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /** Stream that emits when thumb is clicked */
    this.thumbClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /** Stream that emits when an error occurs */
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    // Activate sliding worker
    this.sliderState$ = this._slidingWorker$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.map)(state => ({
      style: this.getSliderStyles(state),
      instant: state.instant
    })));
  }
  get slider() {
    return this.sliderEl.nativeElement;
  }
  ngOnChanges(changes) {
    // Refresh the slider
    if (changes.state) {
      this.updateSlider({
        value: 0,
        instant: changes.state.firstChange
      });
    } else {
      this.updateSlider({
        value: 0,
        instant: true
      });
    }
    // Enable/Disable gestures on changes
    if (changes.config && changes.config.currentValue?.gestures !== changes.config.previousValue?.gestures) {
      if (this.config.gestures) {
        this.activateGestures();
      } else {
        this.deactivateGestures();
      }
    }
    this._freeModeCurrentOffset = 0;
  }
  ngOnInit() {
    this._zone.runOutsideAngular(() => {
      // Set styles manually avoid triggering change detection on dragging
      this._sliderStateSub$ = this.sliderState$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.tap)(state => {
        this.slider.style.transform = state.style.transform;
        this.slider.style.height = state.style.height;
        this.slider.style.width = state.style.width;
        this.slider.classList.toggle('g-no-transition', state.instant);
      })).subscribe();
    });
  }
  ngOnDestroy() {
    this._hammer?.destroy();
    this._sliderStateSub$?.unsubscribe();
    this._slidingWorker$.complete();
  }
  activateGestures() {
    if (!this.config.disableThumb && typeof Hammer !== 'undefined') {
      let direction;
      let touchAction = 'compute';
      switch (this.config.thumbPosition) {
        case ThumbnailsPosition.Right:
        case ThumbnailsPosition.Left:
          direction = Hammer.DIRECTION_VERTICAL;
          if (this.config.reserveGesturesAction) {
            touchAction = 'pan-y';
          }
          break;
        case ThumbnailsPosition.Top:
        case ThumbnailsPosition.Bottom:
          direction = Hammer.DIRECTION_HORIZONTAL;
          if (this.config.reserveGesturesAction) {
            touchAction = 'pan-x';
          }
          break;
      }
      // Activate gestures
      this._hammer = new Hammer(this._el.nativeElement);
      this._hammer.get('pan').set({
        direction
      });
      this._zone.runOutsideAngular(() => {
        // Move the slider
        switch (this.config.thumbMode) {
          case ThumbnailsMode.Strict:
            this._hammer.on('pan', e => this.strictMode(e));
            break;
          case ThumbnailsMode.Free:
            this._hammer.on('pan', e => this.freeMode(e));
        }
      });
    }
  }
  deactivateGestures() {
    this._hammer?.destroy();
  }
  /**
   * Sliding strict mode
   */
  strictMode(e) {
    switch (this.config.thumbPosition) {
      case ThumbnailsPosition.Right:
      case ThumbnailsPosition.Left:
        if (e.isFinal) {
          this.updateSlider({
            value: 0,
            instant: false
          });
          this.verticalPan(e);
        } else {
          this.updateSlider({
            value: e.deltaY,
            instant: true
          });
        }
        break;
      case ThumbnailsPosition.Top:
      case ThumbnailsPosition.Bottom:
        if (e.isFinal) {
          this.updateSlider({
            value: 0,
            instant: false
          });
          this.horizontalPan(e);
        } else {
          this.updateSlider({
            value: e.deltaX,
            instant: true
          });
        }
    }
  }
  /**
   * Sliding free mode
   */
  freeMode(e) {
    switch (this.config.thumbPosition) {
      case ThumbnailsPosition.Right:
      case ThumbnailsPosition.Left:
        this.updateSlider({
          value: this._freeModeCurrentOffset + e.deltaY,
          instant: true
        });
        if (e.isFinal) {
          if (this.minFreeScrollExceeded(e.deltaY, this.config.thumbWidth, this.config.thumbHeight)) {
            this._freeModeCurrentOffset = -(this.state.items.length - 1 - this.state.currIndex) * this.config.thumbHeight;
          } else if (this.maxFreeScrollExceeded(e.deltaY, this.config.thumbHeight, this.config.thumbWidth)) {
            this._freeModeCurrentOffset = this.state.currIndex * this.config.thumbHeight;
          } else {
            this._freeModeCurrentOffset += e.deltaY;
          }
          this.updateSlider({
            value: this._freeModeCurrentOffset,
            instant: false
          });
        }
        break;
      case ThumbnailsPosition.Top:
      case ThumbnailsPosition.Bottom:
        this.updateSlider({
          value: this._freeModeCurrentOffset + e.deltaX,
          instant: true
        });
        if (e.isFinal) {
          if (this.minFreeScrollExceeded(e.deltaX, this.config.thumbHeight, this.config.thumbWidth)) {
            this._freeModeCurrentOffset = -(this.state.items.length - 1 - this.state.currIndex) * this.config.thumbWidth;
          } else if (this.maxFreeScrollExceeded(e.deltaX, this.config.thumbWidth, this.config.thumbHeight)) {
            this._freeModeCurrentOffset = this.state.currIndex * this.config.thumbWidth;
          } else {
            this._freeModeCurrentOffset += e.deltaX;
          }
          this.updateSlider({
            value: this._freeModeCurrentOffset,
            instant: false
          });
        }
    }
  }
  /**
   * Check if the minimum free scroll is exceeded (used in Bottom, Left directions)
   */
  minFreeScrollExceeded(delta, width, height) {
    return -(this._freeModeCurrentOffset + delta - width / 2) > (this.state.items.length - this.state.currIndex) * height;
  }
  /**
   * Check if the maximum free scroll is exceeded (used in Top, Right directions)
   */
  maxFreeScrollExceeded(delta, width, height) {
    return this._freeModeCurrentOffset + delta > this.state.currIndex * width + height / 2;
  }
  /**
   * Convert sliding state to styles
   */
  getSliderStyles(state) {
    const currIndex = this.state.currIndex;
    const itemsLength = this.state.items.length;
    const {
      thumbWidth,
      thumbHeight
    } = this.config;
    let value;
    switch (this.config.thumbPosition) {
      case ThumbnailsPosition.Top:
      case ThumbnailsPosition.Bottom:
        this.width = '100%';
        this.height = this.config.thumbHeight + 'px';
        switch (this.config.thumbView) {
          case 'contain':
            const containerWidth = this._el.nativeElement.clientWidth;
            const minHorizontalShift = itemsLength * thumbWidth - containerWidth;
            // If slider size is larger than thumbnails size
            if (containerWidth > itemsLength * thumbWidth) {
              this.thumbnailsLessThanSlider = true;
            } else {
              // If slider size is smaller than thumbnails size
              this.thumbnailsLessThanSlider = false;
              if (currIndex * thumbWidth + thumbWidth / 2 > containerWidth / 2) {
                value = -Math.min(currIndex * thumbWidth + thumbWidth / 2 - containerWidth / 2, minHorizontalShift);
              } else {
                value = 0;
              }
            }
            break;
          default:
            value = -(currIndex * thumbWidth) - (thumbWidth / 2 - state.value);
        }
        return {
          transform: `translate3d(${value}px, 0, 0)`,
          width: itemsLength * thumbWidth + 'px',
          height: '100%'
        };
      case ThumbnailsPosition.Left:
      case ThumbnailsPosition.Right:
        this.width = this.config.thumbWidth + 'px';
        this.height = '100%';
        switch (this.config.thumbView) {
          case 'contain':
            const containerHeight = this._el.nativeElement.clientHeight;
            const minVerticalShift = itemsLength * thumbHeight - containerHeight;
            // If slider size is larger than thumbnails size
            if (containerHeight > itemsLength * thumbHeight) {
              this.thumbnailsLessThanSlider = true;
            } else {
              // If slider size is smaller than thumbnails size
              this.thumbnailsLessThanSlider = false;
              if (currIndex * thumbHeight + thumbHeight / 2 > containerHeight / 2) {
                value = -Math.min(currIndex * thumbHeight + thumbHeight / 2 - containerHeight / 2, minVerticalShift);
              } else {
                value = 0;
              }
            }
            break;
          default:
            value = -(currIndex * thumbHeight) - (thumbHeight / 2 - state.value);
        }
        return {
          transform: `translate3d(0, ${value}px, 0)`,
          width: '100%',
          height: itemsLength * thumbHeight + 'px'
        };
    }
  }
  verticalPan(e) {
    if (!(e.direction & Hammer.DIRECTION_VERTICAL && e.offsetDirection & Hammer.DIRECTION_VERTICAL)) {
      return;
    }
    if (e.velocityY > 0.3) {
      this.prev();
    } else if (e.velocityY < -0.3) {
      this.next();
    } else {
      if (e.deltaY / 2 <= -this.config.thumbHeight * this.state.items.length / this.config.panSensitivity) {
        this.next();
      } else if (e.deltaY / 2 >= this.config.thumbHeight * this.state.items.length / this.config.panSensitivity) {
        this.prev();
      } else {
        this.action.emit(this.state.currIndex);
      }
    }
  }
  horizontalPan(e) {
    if (!(e.direction & Hammer.DIRECTION_HORIZONTAL && e.offsetDirection & Hammer.DIRECTION_HORIZONTAL)) {
      return;
    }
    if (e.velocityX > 0.3) {
      this.prev();
    } else if (e.velocityX < -0.3) {
      this.next();
    } else {
      if (e.deltaX / 2 <= -this.config.thumbWidth * this.state.items.length / this.config.panSensitivity) {
        this.next();
      } else if (e.deltaX / 2 >= this.config.thumbWidth * this.state.items.length / this.config.panSensitivity) {
        this.prev();
      } else {
        this.action.emit(this.state.currIndex);
      }
    }
  }
  next() {
    this.action.emit('next');
  }
  prev() {
    this.action.emit('prev');
  }
  updateSlider(state) {
    const newState = {
      ...this._slidingWorker$.value,
      ...state
    };
    this._slidingWorker$.next(newState);
  }
}
GalleryThumbsComponent.ɵfac = function GalleryThumbsComponent_Factory(t) {
  return new (t || GalleryThumbsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone));
};
GalleryThumbsComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryThumbsComponent,
  selectors: [["gallery-thumbs"]],
  viewQuery: function GalleryThumbsComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c4, 7);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sliderEl = _t.first);
    }
  },
  hostVars: 4,
  hostBindings: function GalleryThumbsComponent_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("height", ctx.height)("width", ctx.width);
    }
  },
  inputs: {
    state: "state",
    config: "config"
  },
  outputs: {
    action: "action",
    thumbClick: "thumbClick",
    error: "error"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
  decls: 4,
  vars: 5,
  consts: [[1, "g-thumbs-container"], [1, "g-slider"], ["slider", ""], [3, "type", "config", "data", "currIndex", "index", "tapClickDisabled", "tapClick", "error", 4, "ngFor", "ngForOf"], [3, "type", "config", "data", "currIndex", "index", "tapClickDisabled", "tapClick", "error"]],
  template: function GalleryThumbsComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0)(1, "div", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, GalleryThumbsComponent_gallery_thumb_3_Template, 1, 6, "gallery-thumb", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("g-contain", ctx.config.thumbView === ctx.thumbnailsView.Contain)("g-contain-small-content", ctx.thumbnailsLessThanSlider);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.state.items);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.NgForOf, GalleryThumbComponent, TapClick],
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryThumbsComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-thumbs',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <div class="g-thumbs-container">
      <div #slider
           class="g-slider"
           [class.g-contain]="config.thumbView === thumbnailsView.Contain"
           [class.g-contain-small-content]="thumbnailsLessThanSlider">

        <gallery-thumb *ngFor="let item of state.items;let i = index"
                       [type]="item.type"
                       [config]="config"
                       [data]="item.data"
                       [currIndex]="state.currIndex"
                       [index]="i"
                       [tapClickDisabled]="config.disableThumb"
                       (tapClick)="thumbClick.emit(i)"
                       (error)="error.emit({itemIndex: i, error: $event})"></gallery-thumb>
      </div>
    </div>
  `
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }];
  }, {
    state: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    config: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    action: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    thumbClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    height: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['style.height']
    }],
    width: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['style.width']
    }],
    sliderEl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['slider', {
        static: true
      }]
    }]
  });
})();
class GalleryCoreComponent {
  constructor() {
    this.action = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.itemClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.thumbClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
  /** Set thumbnails position */
  get thumbPosition() {
    return this.config.thumbPosition;
  }
  /** Set sliding direction */
  get slidingDirection() {
    return this.config.slidingDirection;
  }
  /** Disable thumbnails clicks */
  get disableThumb() {
    return this.config.disableThumb;
  }
  /** Set gallery image size */
  get imageSize() {
    return this.config.imageSize;
  }
  /** Set gallery dots position */
  get dotsPosition() {
    return this.config.dotsPosition;
  }
  /** Set gallery counter position */
  get counterPosition() {
    return this.config.counterPosition;
  }
}
GalleryCoreComponent.ɵfac = function GalleryCoreComponent_Factory(t) {
  return new (t || GalleryCoreComponent)();
};
GalleryCoreComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryCoreComponent,
  selectors: [["gallery-core"]],
  hostVars: 6,
  hostBindings: function GalleryCoreComponent_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("thumbPosition", ctx.thumbPosition)("slidingDirection", ctx.slidingDirection)("disableThumb", ctx.disableThumb)("imageSize", ctx.imageSize)("dotsPosition", ctx.dotsPosition)("counterPosition", ctx.counterPosition);
    }
  },
  inputs: {
    state: "state",
    config: "config"
  },
  outputs: {
    action: "action",
    itemClick: "itemClick",
    thumbClick: "thumbClick",
    error: "error"
  },
  decls: 6,
  vars: 6,
  consts: [[3, "state", "config", "action", "thumbClick", 4, "ngIf"], [1, "g-box"], [3, "state", "config", "action", "itemClick", "error"], [3, "state", "config", "action", 4, "ngIf"], [3, "state", 4, "ngIf"], [3, "state", "config", "action", "thumbClick"], [3, "state", "config", "action"], [3, "state"]],
  template: function GalleryCoreComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, GalleryCoreComponent_gallery_thumbs_0_Template, 1, 2, "gallery-thumbs", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1)(2, "gallery-slider", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("action", function GalleryCoreComponent_Template_gallery_slider_action_2_listener($event) {
        return ctx.action.emit($event);
      })("itemClick", function GalleryCoreComponent_Template_gallery_slider_itemClick_2_listener($event) {
        return ctx.itemClick.emit($event);
      })("error", function GalleryCoreComponent_Template_gallery_slider_error_2_listener($event) {
        return ctx.error.emit($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, GalleryCoreComponent_gallery_nav_3_Template, 1, 2, "gallery-nav", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, GalleryCoreComponent_gallery_dots_4_Template, 1, 2, "gallery-dots", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, GalleryCoreComponent_gallery_counter_5_Template, 1, 1, "gallery-counter", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.config.thumb);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("state", ctx.state)("config", ctx.config);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.config.nav && ctx.state.items.length > 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.config.dots);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.config.counter);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.NgIf, GalleryNavComponent, GalleryDotsComponent, GallerySliderComponent, GalleryCounterComponent, GalleryThumbsComponent],
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryCoreComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery-core',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <gallery-thumbs *ngIf="config.thumb"
                    [state]="state"
                    [config]="config"
                    (action)="action.emit($event)"
                    (thumbClick)="thumbClick.emit($event)">
    </gallery-thumbs>
    <div class="g-box">
      <gallery-slider [state]="state"
                      [config]="config"
                      (action)="action.emit($event)"
                      (itemClick)="itemClick.emit($event)"
                      (error)="error.emit($event)">

        <gallery-nav *ngIf="config.nav && state.items.length > 1"
                     [state]="state"
                     [config]="config"
                     (action)="action.emit($event)">
        </gallery-nav>

      </gallery-slider>

      <gallery-dots *ngIf="config.dots"
                    [state]="state"
                    [config]="config"
                    (action)="action.emit($event)">
      </gallery-dots>

      <gallery-counter *ngIf="config.counter"
                       [state]="state">
      </gallery-counter>
    </div>
  `
    }]
  }], null, {
    state: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    config: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    action: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    itemClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    thumbClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    thumbPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['attr.thumbPosition']
    }],
    slidingDirection: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['attr.slidingDirection']
    }],
    disableThumb: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['attr.disableThumb']
    }],
    imageSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['attr.imageSize']
    }],
    dotsPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['attr.dotsPosition']
    }],
    counterPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['attr.counterPosition']
    }]
  });
})();
class GalleryComponent {
  constructor(_gallery) {
    this._gallery = _gallery;
    this.nav = this._gallery.config.nav;
    this.dots = this._gallery.config.dots;
    this.loop = this._gallery.config.loop;
    this.thumb = this._gallery.config.thumb;
    this.zoomOut = this._gallery.config.zoomOut;
    this.counter = this._gallery.config.counter;
    this.dotsSize = this._gallery.config.dotsSize;
    this.autoPlay = this._gallery.config.autoPlay;
    this.gestures = this._gallery.config.gestures;
    this.thumbWidth = this._gallery.config.thumbWidth;
    this.thumbHeight = this._gallery.config.thumbHeight;
    this.disableThumb = this._gallery.config.disableThumb;
    this.panSensitivity = this._gallery.config.panSensitivity;
    this.playerInterval = this._gallery.config.playerInterval;
    this.reserveGesturesAction = this._gallery.config.reserveGesturesAction;
    this.itemTemplate = this._gallery.config.itemTemplate;
    this.thumbTemplate = this._gallery.config.thumbTemplate;
    this.thumbMode = this._gallery.config.thumbMode;
    this.imageSize = this._gallery.config.imageSize;
    this.dotsPosition = this._gallery.config.dotsPosition;
    this.counterPosition = this._gallery.config.counterPosition;
    this.slidingDirection = this._gallery.config.slidingDirection;
    this.loadingStrategy = this._gallery.config.loadingStrategy;
    this.thumbPosition = this._gallery.config.thumbPosition;
    this.thumbView = this._gallery.config.thumbView;
    // Inputs used by the lightbox
    /** Destroy gallery ref on component destroy event */
    this.destroyRef = true;
    /** Skip initializing the config with components inputs (Lightbox mode) */
    this.skipInitConfig = false;
    this.itemClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.thumbClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.playingChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.indexChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.itemsChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this._itemClick$ = rxjs__WEBPACK_IMPORTED_MODULE_9__.Subscription.EMPTY;
    this._thumbClick$ = rxjs__WEBPACK_IMPORTED_MODULE_9__.Subscription.EMPTY;
    this._itemChange$ = rxjs__WEBPACK_IMPORTED_MODULE_9__.Subscription.EMPTY;
    this._indexChange$ = rxjs__WEBPACK_IMPORTED_MODULE_9__.Subscription.EMPTY;
    this._playingChange$ = rxjs__WEBPACK_IMPORTED_MODULE_9__.Subscription.EMPTY;
    this._playerListener$ = rxjs__WEBPACK_IMPORTED_MODULE_9__.Subscription.EMPTY;
  }
  getConfig() {
    return {
      nav: this.nav,
      dots: this.dots,
      loop: this.loop,
      thumb: this.thumb,
      zoomOut: this.zoomOut,
      counter: this.counter,
      autoPlay: this.autoPlay,
      gestures: this.gestures,
      dotsSize: this.dotsSize,
      imageSize: this.imageSize,
      thumbMode: this.thumbMode,
      thumbView: this.thumbView,
      thumbWidth: this.thumbWidth,
      thumbHeight: this.thumbHeight,
      disableThumb: this.disableThumb,
      dotsPosition: this.dotsPosition,
      itemTemplate: this.itemTemplate,
      thumbTemplate: this.thumbTemplate,
      thumbPosition: this.thumbPosition,
      panSensitivity: this.panSensitivity,
      playerInterval: this.playerInterval,
      counterPosition: this.counterPosition,
      loadingStrategy: this.loadingStrategy,
      slidingDirection: this.slidingDirection,
      reserveGesturesAction: this.reserveGesturesAction
    };
  }
  onAction(i) {
    switch (i) {
      case 'next':
        this.galleryRef.next();
        break;
      case 'prev':
        this.galleryRef.prev();
        break;
      default:
        this.galleryRef.set(i);
    }
  }
  ngOnChanges(changes) {
    if (this.galleryRef) {
      this.galleryRef.setConfig(this.getConfig());
      if (changes.items && changes.items.currentValue !== changes.items.previousValue) {
        this.load(this.items);
      }
    }
  }
  ngOnInit() {
    // Get gallery instance by id
    if (this.skipInitConfig) {
      this.galleryRef = this._gallery.ref(this.id);
    } else {
      this.galleryRef = this._gallery.ref(this.id, this.getConfig());
    }
    // Load gallery items
    this.load(this.items);
    // Activate player listener
    this._playerListener$ = this.galleryRef.activatePlayer().subscribe();
    // Subscribes to events on demand
    if (this.indexChange.observed) {
      this._indexChange$ = this.galleryRef.indexChanged.subscribe(state => this.indexChange.emit(state));
    }
    if (this.itemsChange.observed) {
      this._itemChange$ = this.galleryRef.itemsChanged.subscribe(state => this.itemsChange.emit(state));
    }
    if (this.playingChange.observed) {
      this._playingChange$ = this.galleryRef.playingChanged.subscribe(state => this.playingChange.emit(state));
    }
    // Start playing if autoplay is set to true
    if (this.autoPlay) {
      this.play();
    }
  }
  ngOnDestroy() {
    this._itemClick$.unsubscribe();
    this._thumbClick$.unsubscribe();
    this._itemChange$.unsubscribe();
    this._indexChange$.unsubscribe();
    this._playingChange$.unsubscribe();
    this._playerListener$.unsubscribe();
    if (this.destroyRef) {
      this.galleryRef.destroy();
    }
  }
  onItemClick(i) {
    this.itemClick.emit(i);
    this.galleryRef.itemClick.next(i);
  }
  onThumbClick(i) {
    this.galleryRef.set(i);
    this.thumbClick.emit(i);
    this.galleryRef.thumbClick.next(i);
  }
  onError(err) {
    this.error.emit(err);
    this.galleryRef.error.next(err);
  }
  load(items) {
    this.galleryRef.load(items);
  }
  add(item, active) {
    this.galleryRef.add(item, active);
  }
  addImage(data, active) {
    this.add(new ImageItem(data), active);
  }
  addVideo(data, active) {
    this.add(new VideoItem(data), active);
  }
  addIframe(data, active) {
    this.add(new IframeItem(data), active);
  }
  addYoutube(data, active) {
    this.add(new YoutubeItem(data), active);
  }
  remove(i) {
    this.galleryRef.remove(i);
  }
  next() {
    this.galleryRef.next();
  }
  prev() {
    this.galleryRef.prev();
  }
  set(i) {
    this.galleryRef.set(i);
  }
  reset() {
    this.galleryRef.reset();
  }
  play(interval) {
    this.galleryRef.play(interval);
  }
  stop() {
    this.galleryRef.stop();
  }
}
GalleryComponent.ɵfac = function GalleryComponent_Factory(t) {
  return new (t || GalleryComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](Gallery));
};
GalleryComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: GalleryComponent,
  selectors: [["gallery"]],
  inputs: {
    id: "id",
    items: "items",
    nav: "nav",
    dots: "dots",
    loop: "loop",
    thumb: "thumb",
    zoomOut: "zoomOut",
    counter: "counter",
    dotsSize: "dotsSize",
    autoPlay: "autoPlay",
    gestures: "gestures",
    thumbWidth: "thumbWidth",
    thumbHeight: "thumbHeight",
    disableThumb: "disableThumb",
    panSensitivity: "panSensitivity",
    playerInterval: "playerInterval",
    reserveGesturesAction: "reserveGesturesAction",
    itemTemplate: "itemTemplate",
    thumbTemplate: "thumbTemplate",
    thumbMode: "thumbMode",
    imageSize: "imageSize",
    dotsPosition: "dotsPosition",
    counterPosition: "counterPosition",
    slidingDirection: "slidingDirection",
    loadingStrategy: "loadingStrategy",
    thumbPosition: "thumbPosition",
    thumbView: "thumbView",
    destroyRef: "destroyRef",
    skipInitConfig: "skipInitConfig"
  },
  outputs: {
    itemClick: "itemClick",
    thumbClick: "thumbClick",
    playingChange: "playingChange",
    indexChange: "indexChange",
    itemsChange: "itemsChange",
    error: "error"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
  ngContentSelectors: _c5,
  decls: 4,
  vars: 6,
  consts: [[3, "state", "config", "action", "itemClick", "thumbClick", "error"]],
  template: function GalleryComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "gallery-core", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("action", function GalleryComponent_Template_gallery_core_action_0_listener($event) {
        return ctx.onAction($event);
      })("itemClick", function GalleryComponent_Template_gallery_core_itemClick_0_listener($event) {
        return ctx.onItemClick($event);
      })("thumbClick", function GalleryComponent_Template_gallery_core_thumbClick_0_listener($event) {
        return ctx.onThumbClick($event);
      })("error", function GalleryComponent_Template_gallery_core_error_0_listener($event) {
        return ctx.onError($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](1, "async");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "async");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](3);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("state", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](1, 2, ctx.galleryRef.state))("config", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 4, ctx.galleryRef.config));
    }
  },
  dependencies: [GalleryCoreComponent, _angular_common__WEBPACK_IMPORTED_MODULE_12__.AsyncPipe],
  styles: ["gallery-core[dotsPosition=top] gallery-dots{top:0}  gallery-core[dotsPosition=bottom] gallery-dots{bottom:0}  gallery-dots{margin:7px;position:absolute;left:50%;transform:translate(-50%)}  .g-dot{cursor:pointer;z-index:20}  .g-dot:hover .g-dot-inner{opacity:1}  .g-dot-active .g-dot-inner{opacity:1;transform:scale(1.5)!important}  .g-dot-inner{background-color:#fff;opacity:.6;width:30%;height:30%;border-radius:50%;box-shadow:0 0 1px #000;transition:all ease .2s}  gallery-dots,   .g-dot,   .g-dot-inner{display:flex;justify-content:center;align-items:center}  .g-nav-next,   .g-nav-prev{position:absolute;top:50%;width:30px;height:40px;cursor:pointer;z-index:999}  .g-nav-next{right:.5em;transform:translateY(-50%) perspective(1px)}  .g-nav-prev{left:.5em;transform:translateY(-50%) perspective(1px) scale(-1)}@media only screen and (max-width: 480px){  .g-nav-next{right:.2em}  .g-nav-prev{left:.2em}}  .g-items-container{height:100%}  .g-slider{position:absolute;transition:transform .4s cubic-bezier(.5,0,.5,1)}  gallery-core[slidingDirection=horizontal] .g-slider{flex-direction:row}  gallery-core[slidingDirection=vertical] .g-slider{flex-direction:column}  gallery-thumbs{display:block;z-index:1;overflow:visible;overflow:initial}  .g-thumbs-container{position:relative;z-index:206;width:100%;height:100%;left:0;top:0;display:flex;overflow:visible;overflow:initial}  gallery-core[disableThumb=true] gallery-thumb{cursor:default}  gallery-core[thumbPosition=top] gallery-thumbs .g-slider,   gallery-core[thumbPosition=bottom] gallery-thumbs .g-slider{flex-direction:row;top:0;left:50%}  gallery-core[thumbPosition=top] gallery-thumbs .g-slider.g-contain,   gallery-core[thumbPosition=bottom] gallery-thumbs .g-slider.g-contain{left:0}  gallery-core[thumbPosition=top] gallery-thumbs .g-slider.g-contain.g-contain-small-content,   gallery-core[thumbPosition=bottom] gallery-thumbs .g-slider.g-contain.g-contain-small-content{left:50%;transform:translate3d(-50%,0,0)!important}  gallery-core[thumbPosition=top] gallery-thumb,   gallery-core[thumbPosition=bottom] gallery-thumb{padding:1px 0 1px 1px}  gallery-core[thumbPosition=left] gallery-thumbs .g-slider,   gallery-core[thumbPosition=right] gallery-thumbs .g-slider{flex-direction:column;top:50%;left:0}  gallery-core[thumbPosition=left] gallery-thumbs .g-slider.g-contain,   gallery-core[thumbPosition=right] gallery-thumbs .g-slider.g-contain{top:0}  gallery-core[thumbPosition=left] gallery-thumbs .g-slider.g-contain.g-contain-small-content,   gallery-core[thumbPosition=right] gallery-thumbs .g-slider.g-contain.g-contain-small-content{top:50%;transform:translate3d(0,-50%,0)!important}  gallery-core[thumbPosition=left] gallery-thumb,   gallery-core[thumbPosition=right] gallery-thumb{padding:0 1px 1px}  gallery-core[thumbPosition=top]{flex-direction:column}  gallery-core[thumbPosition=left]{flex-direction:row}  gallery-core[thumbPosition=right]{flex-direction:row-reverse}  gallery-core[thumbPosition=bottom]{flex-direction:column-reverse}  gallery-thumb.g-active-thumb .g-thumb-loading{background-color:#464646}  .g-thumb-loading{position:relative;overflow:hidden;height:100%;background-color:#262626}  .g-thumb-loading:before{content:\"\";position:absolute;top:0;right:0;bottom:0;left:50%;z-index:1;width:500%;margin-left:-250%;-webkit-animation:_ngcontent-%COMP%_phAnimation .8s linear infinite;animation:_ngcontent-%COMP%_phAnimation .8s linear infinite;background:linear-gradient(to right,rgba(255,255,255,0) 46%,rgba(255,255,255,.35) 50%,rgba(255,255,255,0) 54%) 50% 50%}@-webkit-keyframes _ngcontent-%COMP%_phAnimation{0%{transform:translate3d(-30%,0,0)}to{transform:translate3d(30%,0,0)}}@keyframes _ngcontent-%COMP%_phAnimation{0%{transform:translate3d(-30%,0,0)}to{transform:translate3d(30%,0,0)}}  gallery-core[counterPosition=top] .g-counter{top:0;border-bottom-left-radius:4px;border-bottom-right-radius:4px}  gallery-core[counterPosition=bottom] .g-counter{bottom:0;border-top-left-radius:4px;border-top-right-radius:4px}  .g-counter{z-index:50;position:absolute;left:50%;transform:translate(-50%) perspective(1px);font-size:12px;padding:4px 10px;color:#fff;background-color:#00000080}  gallery[gallerize] gallery-item{cursor:pointer}  gallery-item,   gallery-thumb{position:relative;height:100%;width:100%;display:block;overflow:hidden}  gallery-item h2,   gallery-item h4,   gallery-thumb h2,   gallery-thumb h4{color:coral;margin:0}  gallery-item h2,   gallery-thumb h2{font-size:3.5em;margin-bottom:.3em}  gallery-item h4,   gallery-thumb h4{font-size:1.6em}  gallery-item{z-index:10}  gallery-item video,   gallery-item iframe{position:absolute;width:100%;height:100%}  gallery-thumb{opacity:.5;cursor:pointer;transition:opacity .3s cubic-bezier(.5,0,.5,1)}  gallery-thumb.g-active-thumb{opacity:1}  .g-image-item{width:100%;height:100%;-o-object-fit:cover;object-fit:cover;pointer-events:none}  .g-template,   .g-image-error-message{position:absolute;z-index:10;left:0;top:0;right:0;bottom:0;color:#fff;display:flex;align-items:center;justify-content:center;flex-direction:column}  .g-loading{position:absolute;transform:translate3d(-50%,-50%,0);left:50%;top:50%;width:80px;height:80px}  gallery-core[imageSize=contain] gallery-slider .g-image-item{-o-object-fit:contain;object-fit:contain}  gallery-image{display:flex;justify-content:center;align-items:center;height:100%}  gallery{position:relative;z-index:1;overflow:hidden;display:block;height:500px;background-color:#000}  gallery *{box-sizing:border-box}  gallery,   gallery-core{position:relative;overflow:hidden}  gallery-core,   .g-box,   .g-slider{display:flex;height:100%;width:100%}  gallery[fluid]{transform:translate(-50vw);width:100vw;left:50%}  gallery[fluid][fluid=false]{transform:none;width:auto;width:initial;left:auto;left:initial}  .g-no-transition{transition:none 0s ease 0s!important;transition:initial!important}  .g-box,   gallery-slider{overflow:hidden;position:relative;display:flex;flex-direction:column;flex:1;order:1;height:100%}  gallery-nav svg,   .g-btn-close svg{width:100%;height:100%;filter:drop-shadow(0px 0px 1px black);transition:opacity linear .2s;opacity:.6}  gallery-nav svg:hover,   .g-btn-close svg:hover{opacity:1}"],
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'gallery',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `
    <gallery-core [state]="galleryRef.state | async"
                  [config]="galleryRef.config | async"
                  (action)="onAction($event)"
                  (itemClick)="onItemClick($event)"
                  (thumbClick)="onThumbClick($event)"
                  (error)="onError($event)"></gallery-core>
    <ng-content></ng-content>
  `,
      styles: ["::ng-deep gallery-core[dotsPosition=top] gallery-dots{top:0}::ng-deep gallery-core[dotsPosition=bottom] gallery-dots{bottom:0}::ng-deep gallery-dots{margin:7px;position:absolute;left:50%;transform:translate(-50%)}::ng-deep .g-dot{cursor:pointer;z-index:20}::ng-deep .g-dot:hover .g-dot-inner{opacity:1}::ng-deep .g-dot-active .g-dot-inner{opacity:1;transform:scale(1.5)!important}::ng-deep .g-dot-inner{background-color:#fff;opacity:.6;width:30%;height:30%;border-radius:50%;box-shadow:0 0 1px #000;transition:all ease .2s}::ng-deep gallery-dots,::ng-deep .g-dot,::ng-deep .g-dot-inner{display:flex;justify-content:center;align-items:center}::ng-deep .g-nav-next,::ng-deep .g-nav-prev{position:absolute;top:50%;width:30px;height:40px;cursor:pointer;z-index:999}::ng-deep .g-nav-next{right:.5em;transform:translateY(-50%) perspective(1px)}::ng-deep .g-nav-prev{left:.5em;transform:translateY(-50%) perspective(1px) scale(-1)}@media only screen and (max-width: 480px){::ng-deep .g-nav-next{right:.2em}::ng-deep .g-nav-prev{left:.2em}}::ng-deep .g-items-container{height:100%}::ng-deep .g-slider{position:absolute;transition:transform .4s cubic-bezier(.5,0,.5,1)}::ng-deep gallery-core[slidingDirection=horizontal] .g-slider{flex-direction:row}::ng-deep gallery-core[slidingDirection=vertical] .g-slider{flex-direction:column}::ng-deep gallery-thumbs{display:block;z-index:1;overflow:visible;overflow:initial}::ng-deep .g-thumbs-container{position:relative;z-index:206;width:100%;height:100%;left:0;top:0;display:flex;overflow:visible;overflow:initial}::ng-deep gallery-core[disableThumb=true] gallery-thumb{cursor:default}::ng-deep gallery-core[thumbPosition=top] gallery-thumbs .g-slider,::ng-deep gallery-core[thumbPosition=bottom] gallery-thumbs .g-slider{flex-direction:row;top:0;left:50%}::ng-deep gallery-core[thumbPosition=top] gallery-thumbs .g-slider.g-contain,::ng-deep gallery-core[thumbPosition=bottom] gallery-thumbs .g-slider.g-contain{left:0}::ng-deep gallery-core[thumbPosition=top] gallery-thumbs .g-slider.g-contain.g-contain-small-content,::ng-deep gallery-core[thumbPosition=bottom] gallery-thumbs .g-slider.g-contain.g-contain-small-content{left:50%;transform:translate3d(-50%,0,0)!important}::ng-deep gallery-core[thumbPosition=top] gallery-thumb,::ng-deep gallery-core[thumbPosition=bottom] gallery-thumb{padding:1px 0 1px 1px}::ng-deep gallery-core[thumbPosition=left] gallery-thumbs .g-slider,::ng-deep gallery-core[thumbPosition=right] gallery-thumbs .g-slider{flex-direction:column;top:50%;left:0}::ng-deep gallery-core[thumbPosition=left] gallery-thumbs .g-slider.g-contain,::ng-deep gallery-core[thumbPosition=right] gallery-thumbs .g-slider.g-contain{top:0}::ng-deep gallery-core[thumbPosition=left] gallery-thumbs .g-slider.g-contain.g-contain-small-content,::ng-deep gallery-core[thumbPosition=right] gallery-thumbs .g-slider.g-contain.g-contain-small-content{top:50%;transform:translate3d(0,-50%,0)!important}::ng-deep gallery-core[thumbPosition=left] gallery-thumb,::ng-deep gallery-core[thumbPosition=right] gallery-thumb{padding:0 1px 1px}::ng-deep gallery-core[thumbPosition=top]{flex-direction:column}::ng-deep gallery-core[thumbPosition=left]{flex-direction:row}::ng-deep gallery-core[thumbPosition=right]{flex-direction:row-reverse}::ng-deep gallery-core[thumbPosition=bottom]{flex-direction:column-reverse}::ng-deep gallery-thumb.g-active-thumb .g-thumb-loading{background-color:#464646}::ng-deep .g-thumb-loading{position:relative;overflow:hidden;height:100%;background-color:#262626}::ng-deep .g-thumb-loading:before{content:\"\";position:absolute;top:0;right:0;bottom:0;left:50%;z-index:1;width:500%;margin-left:-250%;-webkit-animation:phAnimation .8s linear infinite;animation:phAnimation .8s linear infinite;background:linear-gradient(to right,rgba(255,255,255,0) 46%,rgba(255,255,255,.35) 50%,rgba(255,255,255,0) 54%) 50% 50%}@-webkit-keyframes phAnimation{0%{transform:translate3d(-30%,0,0)}to{transform:translate3d(30%,0,0)}}@keyframes phAnimation{0%{transform:translate3d(-30%,0,0)}to{transform:translate3d(30%,0,0)}}::ng-deep gallery-core[counterPosition=top] .g-counter{top:0;border-bottom-left-radius:4px;border-bottom-right-radius:4px}::ng-deep gallery-core[counterPosition=bottom] .g-counter{bottom:0;border-top-left-radius:4px;border-top-right-radius:4px}::ng-deep .g-counter{z-index:50;position:absolute;left:50%;transform:translate(-50%) perspective(1px);font-size:12px;padding:4px 10px;color:#fff;background-color:#00000080}::ng-deep gallery[gallerize] gallery-item{cursor:pointer}::ng-deep gallery-item,::ng-deep gallery-thumb{position:relative;height:100%;width:100%;display:block;overflow:hidden}::ng-deep gallery-item h2,::ng-deep gallery-item h4,::ng-deep gallery-thumb h2,::ng-deep gallery-thumb h4{color:coral;margin:0}::ng-deep gallery-item h2,::ng-deep gallery-thumb h2{font-size:3.5em;margin-bottom:.3em}::ng-deep gallery-item h4,::ng-deep gallery-thumb h4{font-size:1.6em}::ng-deep gallery-item{z-index:10}::ng-deep gallery-item video,::ng-deep gallery-item iframe{position:absolute;width:100%;height:100%}::ng-deep gallery-thumb{opacity:.5;cursor:pointer;transition:opacity .3s cubic-bezier(.5,0,.5,1)}::ng-deep gallery-thumb.g-active-thumb{opacity:1}::ng-deep .g-image-item{width:100%;height:100%;-o-object-fit:cover;object-fit:cover;pointer-events:none}::ng-deep .g-template,::ng-deep .g-image-error-message{position:absolute;z-index:10;left:0;top:0;right:0;bottom:0;color:#fff;display:flex;align-items:center;justify-content:center;flex-direction:column}::ng-deep .g-loading{position:absolute;transform:translate3d(-50%,-50%,0);left:50%;top:50%;width:80px;height:80px}::ng-deep gallery-core[imageSize=contain] gallery-slider .g-image-item{-o-object-fit:contain;object-fit:contain}::ng-deep gallery-image{display:flex;justify-content:center;align-items:center;height:100%}::ng-deep gallery{position:relative;z-index:1;overflow:hidden;display:block;height:500px;background-color:#000}::ng-deep gallery *{box-sizing:border-box}::ng-deep gallery,::ng-deep gallery-core{position:relative;overflow:hidden}::ng-deep gallery-core,::ng-deep .g-box,::ng-deep .g-slider{display:flex;height:100%;width:100%}::ng-deep gallery[fluid]{transform:translate(-50vw);width:100vw;left:50%}::ng-deep gallery[fluid][fluid=false]{transform:none;width:auto;width:initial;left:auto;left:initial}::ng-deep .g-no-transition{transition:none 0s ease 0s!important;transition:initial!important}::ng-deep .g-box,::ng-deep gallery-slider{overflow:hidden;position:relative;display:flex;flex-direction:column;flex:1;order:1;height:100%}::ng-deep gallery-nav svg,::ng-deep .g-btn-close svg{width:100%;height:100%;filter:drop-shadow(0px 0px 1px black);transition:opacity linear .2s;opacity:.6}::ng-deep gallery-nav svg:hover,::ng-deep .g-btn-close svg:hover{opacity:1}\n"]
    }]
  }], function () {
    return [{
      type: Gallery
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    items: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    nav: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    dots: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    loop: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    thumb: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    zoomOut: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    counter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    dotsSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    autoPlay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    gestures: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    thumbWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    thumbHeight: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    disableThumb: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    panSensitivity: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    playerInterval: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    reserveGesturesAction: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    itemTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    thumbTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    thumbMode: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    imageSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    dotsPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    counterPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    slidingDirection: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    loadingStrategy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    thumbPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    thumbView: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    destroyRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    skipInitConfig: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    itemClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    thumbClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    playingChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    indexChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    itemsChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();
class GalleryModule {
  static withConfig(config) {
    return {
      ngModule: GalleryModule,
      providers: [{
        provide: GALLERY_CONFIG,
        useValue: config
      }]
    };
  }
}
GalleryModule.ɵfac = function GalleryModule_Factory(t) {
  return new (t || GalleryModule)();
};
GalleryModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: GalleryModule
});
GalleryModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.CommonModule]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GalleryModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.CommonModule],
      declarations: [GalleryComponent, GalleryNavComponent, GalleryDotsComponent, GalleryCoreComponent, GallerySliderComponent, GalleryCounterComponent, GalleryThumbsComponent, GalleryThumbComponent, GalleryItemComponent, GalleryImageComponent, GalleryVideoComponent, GalleryIframeComponent, LazyImage, TapClick],
      exports: [GalleryComponent, LazyImage, TapClick]
    }]
  }], null, null);
})();

/**
 * Generated bundle index. Do not edit.
 */



/***/ })

}]);
//# sourceMappingURL=default-node_modules_ng-gallery_fesm2020_ng-gallery-lightbox_mjs.js.map